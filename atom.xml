<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>致以无暇之人</title>
  
  <subtitle>爱莉希雅永远爱你～</subtitle>
  <link href="https://blog.elykia.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.elykia.cn/"/>
  <updated>2025-04-28T10:32:43.443Z</updated>
  <id>https://blog.elykia.cn/</id>
  
  <author>
    <name>Elykia</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Twikoo 在多吉云CDN场景下获取访客真实IP的解决方案</title>
    <link href="https://blog.elykia.cn/posts/24.html"/>
    <id>https://blog.elykia.cn/posts/24.html</id>
    <published>2025-04-28T10:30:15.000Z</published>
    <updated>2025-04-28T10:32:43.443Z</updated>
    
    <content type="html"><![CDATA[<p>这是去年遇到的问题了，虽然当时很快解决了，但一直没时间水一篇文章，就这么拖到了现在。今天终于抽空，把这个小坑记录一下。</p><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>部署 Twikoo 评论系统后，加了 CDN（多吉云），想着加速一下访问速度，结果评论里的用户 IP 地址不对了，显示的是 CDN 节点的 IP。<br>排查后发现，问题出在<strong>CDN 转发时，后端拿到的是节点 IP，而不是访客真实 IP</strong>。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>当时我在Github上提了一个 <a href="https://github.com/twikoojs/twikoo/issues/769">issue</a> ，很快得到了作者 <a href="https://github.com/imaegoo">imaegoo</a> 大佬的回复指导，解决过程也很简单，总结下来：</p><p>🔹 CDN 通常会把访客真实 IP 加到一个请求头里，比如 <code>X-Forwarded-For</code>。</p><p>🔹 只需要告诉 Twikoo 从正确的请求头里取 IP 就行了。</p><p>比如：</p><ul><li><p>腾讯云 EdgeOne 的访客 IP 放在 <code>EO-Client-IP</code>，配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TWIKOO_IP_HEADERS=[&quot;headers.eo-client-ip&quot;]</span><br></pre></td></tr></table></figure></li><li><p>而我用的是 <strong>多吉云</strong>，默认是 <code>X-Forwarded-For</code>，所以配置成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TWIKOO_IP_HEADERS=[&quot;headers.x-forwarded-for&quot;]</span><br></pre></td></tr></table></figure></li></ul><p>⚠️ 注意：格式是 <code>&quot;headers.x-forwarded-for&quot;</code>，不是 <code>&quot;X-Forwarded-For&quot;</code>！</p><h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><p>如果你的 Twikoo 是通过 1Panel 部署的，可以按下面步骤添加环境变量，其他的大概也类似：</p><ol><li><p>打开 1Panel 面板，进入 <strong>容器</strong>。</p></li><li><p>找到你的 <strong>twikoo 容器</strong>，点击<strong>编辑</strong>。</p></li><li><p>滑到页面最下方，找到 <strong>环境变量</strong> 部分。</p></li><li><p>添加一条新的环境变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TWIKOO_IP_HEADERS=[&quot;headers.x-forwarded-for&quot;]</span><br></pre></td></tr></table></figure></li></ol><ul><li><p><strong>键（Key）</strong>：<code>TWIKOO_IP_HEADERS</code></p></li><li><p><strong>值（Value）</strong>：<code>[&quot;headers.x-forwarded-for&quot;]</code></p></li></ul><ol start="5"><li>保存并重启容器，配置就生效了！</li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>配了 CDN 后，不用担心评论 IP 问题，只要设置好 IP 透传头就行了。</li><li>不同的 CDN 提供的请求头可能不同，记得对照文档确认一下。</li><li>小坑一枚，迟来的水文一篇，希望能帮到有缘人！</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这是去年遇到的问题了，虽然当时很快解决了，但一直没时间水一篇文章，就这么拖到了现在。今天终于抽空，把这个小坑记录一下。&lt;/p&gt;
&lt;h2 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;#遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问</summary>
      
    
    
    
    <category term="编程开发" scheme="https://blog.elykia.cn/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="问题" scheme="https://blog.elykia.cn/tags/%E9%97%AE%E9%A2%98/"/>
    
    <category term="CDN" scheme="https://blog.elykia.cn/tags/CDN/"/>
    
    <category term="1panel" scheme="https://blog.elykia.cn/tags/1panel/"/>
    
    <category term="Twikoo" scheme="https://blog.elykia.cn/tags/Twikoo/"/>
    
  </entry>
  
  <entry>
    <title>1panel自定义博客的404页面</title>
    <link href="https://blog.elykia.cn/posts/23.html"/>
    <id>https://blog.elykia.cn/posts/23.html</id>
    <published>2025-01-17T09:26:37.000Z</published>
    <updated>2025-01-17T09:33:30.167Z</updated>
    
    <content type="html"><![CDATA[<p>今天忽然发现，我的博客的404界面被Openresty默认的404界面给覆盖了，经过一番查找，终于找到了解决方法。</p><h3 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h3><p>默认情况下，Nginx或Openresty会使用自己配置的404页面，而不会使用我们博客程序自带的404页面。因此，我们需要对Nginx和Openresty的配置进行一些小修改，让其使用我们自定义的404页面。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>以1Panel面板为例，宝塔面板的设置类似。</p><p>首先找到你的网站设置中的配置文件，</p><p>找到第 20 行左右的<code>error_page</code>指令，</p><p>将原来的：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">error_page</span> <span class="number">404</span> /<span class="number">404</span>.html;</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">error_page</span> <span class="number">404</span> <span class="number">403</span> <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /<span class="number">404</span>.html;</span><br><span class="line"><span class="section">location</span> = /<span class="number">404</span>.html &#123;</span><br><span class="line">    <span class="attribute">root</span> /www/sites/blog/index;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>root</code>后的路径是你自己的404页面的实际路径。</p><h3 id="其他情况"><a href="#其他情况" class="headerlink" title="其他情况"></a>其他情况</h3><p>如果你是直接使用Nginx而不是通过1Panel面板或宝塔面板管理网站，可以找到对应网站的Nginx配置文件（通常路径为<code>/etc/nginx/nginx.conf</code>或<code>/etc/nginx/sites-available/default</code>），在<code>server</code>块中进行同样的修改。</p><h3 id="验证效果"><a href="#验证效果" class="headerlink" title="验证效果"></a>验证效果</h3><p>修改完成后，你可以尝试访问一个不存在的页面，看看是否显示了你自定义的404页面。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>通过以上简单的步骤，你就可以轻松地为你的博客自定义404页面了。希望这篇教程对你有所帮助！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天忽然发现，我的博客的404界面被Openresty默认的404界面给覆盖了，经过一番查找，终于找到了解决方法。&lt;/p&gt;
&lt;h3 id=&quot;问题原因&quot;&gt;&lt;a href=&quot;#问题原因&quot; class=&quot;headerlink&quot; title=&quot;问题原因&quot;&gt;&lt;/a&gt;问题原因&lt;/h3&gt;</summary>
      
    
    
    
    <category term="服务器运维" scheme="https://blog.elykia.cn/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="问题" scheme="https://blog.elykia.cn/tags/%E9%97%AE%E9%A2%98/"/>
    
    <category term="1panel" scheme="https://blog.elykia.cn/tags/1panel/"/>
    
  </entry>
  
  <entry>
    <title>郑州大学宿舍电量监控：ZZU-Dorm-Electricity-Balance</title>
    <link href="https://blog.elykia.cn/posts/22.html"/>
    <id>https://blog.elykia.cn/posts/22.html</id>
    <published>2025-01-16T13:22:06.000Z</published>
    <updated>2025-01-16T14:33:25.575Z</updated>
    
    <content type="html"><![CDATA[<h2 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h2><p>终于考完了期末考试，这段时间真是因考试忙得不可开交，根本没时间更新博客。前几天，晚上11点宿舍突然因为欠费停电，而逆天郑州大学移动校园平台晚上又无法充值电费，只能等到白天处理。这次半夜断电的事件让我深刻意识到，自动化查询和预警的必要性。于是，我决定写一个工具来监测电费余额，提前预警，避免再次遇到这种尴尬的情况。</p><h2 id="研发过程"><a href="#研发过程" class="headerlink" title="研发过程"></a>研发过程</h2><p>我在 GitHub 上看到了 <a href="https://github.com/TorCroft">TorCroft</a> 学长的 <a href="https://github.com/TorCroft/ZZU-Electricity">ZZU-Electricity</a> 项目，但可惜大佬已经毕业，项目不再维护。而且项目中内置的 <a href="https://github.com/TorCroft/ZZU-API">ZZU-API</a> 也由于年代久远，无人维护，经常报错。正当我一筹莫展时，看到了 <a href="https://github.com/Illustar0">Illustar0</a> 同学的 <a href="https://github.com/Illustar0/ZZU.Py">ZZU.Py</a> 项目，它封装了郑州大学移动校园 APP 的 API，更加高效简洁。于是，我尝试将原项目中的 <a href="https://github.com/TorCroft/ZZU-API">ZZU-API</a> 替换为 <a href="https://github.com/Illustar0/ZZU.Py">ZZU.Py</a>，最终取得了很好的效果。除此之外，我还仿照 <a href="https://github.com/TorCroft/ZZU-Electricity">ZZU-Electricity</a> 的监控逻辑，完善了展示网页，并将通知方式改为通过 Server 酱和 Telegram 发送通知，最终完成了本项目<a href="https://github.com/elykia-cn/ZZU-Dorm-Electricity-Balance">elykia-cn&#x2F;ZZU-Dorm-Electricity-Balance: 郑州大学宿舍用电记录</a>，达到了我的目的。</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://github.com/elykia-cn/ZZU-Dorm-Electricity-Balance">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="">          <i class="anzhiyufont anzhiyu-icon-link" style=""></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">项目地址</div>            <div class="tag-link-sitename">Elykia</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://elykia-cn.github.io/ZZU-Dorm-Electricity-Balance/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="">          <i class="anzhiyufont anzhiyu-icon-link" style=""></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">演示网站</div>            <div class="tag-link-sitename">Elykia</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h2 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h2><h3 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a>核心功能</h3><ol><li><strong>实时电量监控</strong>：通过 <a href="https://github.com/Illustar0/ZZU.Py">ZZU.Py</a> 实时获取宿舍电量余额，监控照明和空调设备的用电情况。</li><li><strong>智能提醒</strong>：当电量低于设定阈值时，自动通过 Server 酱和 Telegram 发送通知，确保用户及时充值。</li><li><strong>历史记录</strong>：记录每月电量使用数据，支持查看和分析历史用电情况，帮助用户更好地管理电量。</li><li><strong>多平台通知</strong>：支持 Server 酱和 Telegram 两种通知方式，满足不同用户的需求。</li></ol><h3 id="技术亮点"><a href="#技术亮点" class="headerlink" title="技术亮点"></a>技术亮点</h3><ul><li>基于 <a href="https://github.com/Illustar0/ZZU.Py">ZZU.Py</a> 实现高效、稳定的电量数据获取。</li><li>结合 <a href="https://github.com/TorCroft/ZZU-Electricity">ZZU-Electricity</a> 的监控逻辑，实现电量余额的实时监控与提醒。</li><li>支持Server 酱和 Telegram 等多平台通知，确保用户不会错过重要提醒。</li></ul><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul><li>每隔一段时间获取宿舍照明和空调的电量余额。</li><li>自动判断电量状态，并根据设定的阈值（默认为5.0）发送警告通知。</li><li>通过 Server 酱和 Telegram 通知宿舍住户电量状态。</li><li>提供一个简单的前端页面，显示电量数据和图表。</li></ul><h2 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h2><ul><li><strong>Python</strong>：主要用于数据采集、处理和发送通知。</li><li><strong>ZZUPy</strong>：郑州大学移动校园的 Python API 封装。</li><li><strong>Telegram Bot API</strong>：通过 Telegram 发送通知。</li><li><strong>Server 酱</strong>：通过 Server 酱发送通知。</li><li><strong>ECharts</strong>：用于前端展示电量数据图表。</li><li><strong>GitHub Actions</strong>：用于自动化构建和部署，自动检查更新并部署到 GitHub Pages。</li></ul><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ol><li><strong>Repository Secrets</strong>：需要在GitHub Secrets中添加以下变量：</li></ol><table><thead><tr><th>环境变量</th><th>描述</th></tr></thead><tbody><tr><td><code>EMAIL</code></td><td>GitHub邮箱</td></tr><tr><td><code>ACCOUNT</code></td><td>郑州大学移动校园登录账户</td></tr><tr><td><code>PASSWORD</code></td><td>郑州大学移动校园登录密码</td></tr><tr><td><code>lt_room</code></td><td>照明电量账户</td></tr><tr><td><code>ac_room</code></td><td>空调电量账户</td></tr><tr><td><code>TELEGRAM_BOT_TOKEN</code></td><td>Telegram Bot Token</td></tr><tr><td><code>TELEGRAM_CHAT_ID</code></td><td>Telegram Chat ID</td></tr><tr><td><code>SERVERCHAN_KEY</code></td><td>Server 酱 API 密钥</td></tr><tr><td><code>SERVERCHAN_KEY2</code></td><td>多个Server 酱 API 密钥</td></tr><tr><td><code>SERVERCHAN_KEY3</code></td><td>多个Server 酱 API 密钥</td></tr></tbody></table><ol start="2"><li><strong>创建数据存储文件夹</strong>：该项目会将数据保存在 <code>./page/data</code> 文件夹下，请确保该文件夹存在。</li></ol><h2 id="自动化工作流"><a href="#自动化工作流" class="headerlink" title="自动化工作流"></a>自动化工作流</h2><p>该项目使用 GitHub Actions 进行自动化管理。工作流触发时会：</p><ul><li><strong>定时触发</strong>：工作流通过 <code>cron</code> 表达式每天在 北京时间 12:00、15:00、18:00、21:00、24:00  自动运行。</li><li><strong>手动触发</strong>：也可以通过 GitHub 界面手动触发工作流执行。</li></ul><h3 id="工作流步骤"><a href="#工作流步骤" class="headerlink" title="工作流步骤"></a>工作流步骤</h3><ol><li><strong>Checkout</strong>：通过 <code>actions/checkout@v4</code> 拉取项目代码，默认深度为 2，以便获取历史提交记录。</li><li><strong>设置 Python 3.12 环境</strong>：使用 <code>actions/setup-python@v5</code> 设置 Python 3.12 环境。</li><li><strong>安装依赖</strong>：安装项目的 Python 依赖，确保 <code>requirements.txt</code> 文件存在时自动安装。</li><li><strong>执行 Python 脚本</strong>：运行 <code>index.py</code> 和 <code>markdown.py</code> 脚本，生成更新并将输出添加到 GitHub Actions 的步骤摘要中。</li><li><strong>检查更改</strong>：检查项目代码是否发生了变化。</li><li><strong>获取最后一次提交信息</strong>：获取最近的一次提交信息，避免不必要的提交。</li><li><strong>提交更改</strong>：如果代码有变化，提交并推送更改。如果提交信息以 “Updated at” 开头，则执行强制推送。</li><li><strong>设置 GitHub Pages</strong>：如果有更新，将网站内容上传至 GitHub Pages。</li><li><strong>上传构建的页面</strong>：将页面内容打包并上传，以供部署。</li><li><strong>部署到 GitHub Pages</strong>：如果构建步骤成功，自动将页面部署到 GitHub Pages，确保每次更新都会自动发布。</li></ol><h2 id="示例通知"><a href="#示例通知" class="headerlink" title="示例通知"></a>示例通知</h2><ul><li><p><strong>电量充足</strong>：<br>🏠宿舍电量通报🏠<br>💡 照明剩余电量：25.0 度（充足）<br>❄️ 空调剩余电量：50.0 度（充足）</p></li><li><p><strong>电量不足</strong>：<br>⚠️宿舍电量预警⚠️<br>💡 照明剩余电量：4.5 度（⚠️警告）<br>❄️ 空调剩余电量：3.0 度（⚠️警告）<br>⚠️ 电量不足，请尽快充电！</p></li></ul><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="1-登录失败怎么办？"><a href="#1-登录失败怎么办？" class="headerlink" title="1. 登录失败怎么办？"></a>1. 登录失败怎么办？</h3><p>请确保您提供的账号和密码正确，并且 <code>ZZUPy</code> 的 API 接口正常工作。如果仍然无法登录，请检查网络连接或参考 <a href="https://illustar0.github.io/ZZU.Py/"><code>ZZUPy</code> 的文档</a>)。</p><h3 id="2-Telegram-通知无法发送？"><a href="#2-Telegram-通知无法发送？" class="headerlink" title="2. Telegram 通知无法发送？"></a>2. Telegram 通知无法发送？</h3><p>请确保您设置了正确的 Telegram Bot Token 和 Chat ID，并且 Telegram Bot 有权向该 Chat ID 发送消息。</p><h3 id="3-Server-酱-通知无法发送？"><a href="#3-Server-酱-通知无法发送？" class="headerlink" title="3. Server 酱 通知无法发送？"></a>3. Server 酱 通知无法发送？</h3><p>因 Server 酱 每日发送数量的限制较为严格，仅为5条&#x2F;天，故设置为只有 <strong>电量不足</strong> 预警时才会发送消息，Telegram Bot 无此限制，每次运行 GitHub Actions 都会发送电量消息。</p><h3 id="4-数据没有更新？"><a href="#4-数据没有更新？" class="headerlink" title="4. 数据没有更新？"></a>4. 数据没有更新？</h3><p>请确保程序能正常读取 <code>./page/data</code> 文件夹中的 JSON 文件。如果该文件夹没有数据，请先运行程序获取初始数据。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>希望 <strong>ZZU-Dorm-Electricity-Balance</strong> 能为同学们的校园生活带来便利。本人也是 <strong>门外汉</strong>，非计算机相关专业，代码可能非常简陋，欢迎提交 Issue 或 Pull Request。如果你有任何建议或问题，欢迎在 GitHub 上提交 Issue 或 Pull Request。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h2&gt;&lt;p&gt;终于考完了期末考试，这段时间真是因考试忙得不可开交，根本没时间更新博客。前几天，晚上11点宿舍突然因为欠费停电，而逆天郑州大学移动校</summary>
      
    
    
    
    <category term="编程开发" scheme="https://blog.elykia.cn/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="ZZU" scheme="https://blog.elykia.cn/tags/ZZU/"/>
    
    <category term="郑州大学" scheme="https://blog.elykia.cn/tags/%E9%83%91%E5%B7%9E%E5%A4%A7%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Hexo教程(四) Layout详解：从原理到应用</title>
    <link href="https://blog.elykia.cn/posts/21.html"/>
    <id>https://blog.elykia.cn/posts/21.html</id>
    <published>2024-12-14T09:11:27.000Z</published>
    <updated>2024-12-14T09:19:15.641Z</updated>
    
    <content type="html"><![CDATA[<h3 id="进阶内容：Hexo中的layout概念"><a href="#进阶内容：Hexo中的layout概念" class="headerlink" title="进阶内容：Hexo中的layout概念"></a>进阶内容：Hexo中的<code>layout</code>概念</h3><p>对于想深入了解Hexo主题定制和博客排版的开发者来说，<code>layout</code>是一个非常重要的概念。理解它有助于更好地控制博客页面的结构和样式，使我们能够根据需求轻松创建和管理不同类型的页面和文章。</p><p>在Hexo中，<code>layout</code>主要指的是页面的排版和布局。它决定了每个页面的外观和内容如何被展示。通过<code>layout</code>，我们可以灵活地选择和定制文章、页面或草稿的布局。</p><h4 id="1-layout概述"><a href="#1-layout概述" class="headerlink" title="1. layout概述"></a>1. <code>layout</code>概述</h4><p><code>layout</code>的基本作用是告诉Hexo如何渲染特定页面或文章的HTML结构和样式。它实际上涉及了两个部分：</p><ul><li><strong>内容设置</strong>：即定义页面或文章的主要内容（Front Matter、正文等）。</li><li><strong>排版设置</strong>：即如何根据不同的<code>layout</code>类型渲染HTML结构，并应用相应的CSS样式。</li></ul><p>默认情况下，Hexo为我们提供了几种常见的布局：<code>post</code>（文章）、<code>draft</code>（草稿）和<code>page</code>（页面）。但实际上，我们可以根据需要创建更多自定义布局。</p><h4 id="2-layout的工作原理"><a href="#2-layout的工作原理" class="headerlink" title="2. layout的工作原理"></a>2. <code>layout</code>的工作原理</h4><p>在Hexo中，每个Markdown文件都有一个<code>layout</code>属性。这个属性通常会出现在文件的<strong>Front Matter</strong>部分。如果在Front Matter中没有指定<code>layout</code>，Hexo会根据<code>_config.yml</code>中的<code>default_layout</code>参数来决定默认的布局，默认为<code>post</code>。</p><p>具体来说，Hexo在渲染一个页面时，会根据<code>layout</code>属性来选择相应的<code>ejs</code>模板文件，生成最终的HTML页面。一个<code>layout</code>的定义过程主要涉及两个地方：</p><ol><li><strong><code>scaffolds/</code>文件夹</strong>：主要控制新创建的Markdown文件的基本内容模板。</li><li><strong><code>themes/theme-name/layout/</code>文件夹</strong>：定义具体的排版和样式设置，主要包括<code>ejs</code>模板文件。</li></ol><h4 id="3-scaffolds-文件夹"><a href="#3-scaffolds-文件夹" class="headerlink" title="3. scaffolds/文件夹"></a>3. <code>scaffolds/</code>文件夹</h4><p><code>scaffolds/</code>文件夹的作用是定义新的Markdown文件时默认的内容格式。当你使用<code>hexo new</code>命令创建一篇新的文章时，Hexo会自动使用<code>scaffolds/</code>中的模板来生成该文件的初始内容。</p><p><strong>如何使用：</strong></p><p>假设你希望创建一个自定义的布局，名为<code>selflayout</code>，可以按照以下步骤操作：</p><ol><li>在<code>scaffolds/</code>文件夹下创建一个新文件，例如<code>selflayout.md</code>，并定义其Front Matter内容：<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123;title&#125;&#125;</span><br><span class="line">date: &#123;&#123;date&#125;&#125;</span><br><span class="line">author: hahaha</span><br><span class="line"><span class="section">layout: &#123;&#123;layout&#125;&#125;</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line">Demo: self-defined post content</span><br></pre></td></tr></table></figure></li><li>然后使用命令生成新的文章：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new selflayout <span class="string">&quot;demo&quot;</span></span><br></pre></td></tr></table></figure>在<code>_posts/</code>文件夹下会生成一个名为<code>demo.md</code>的文件，并且<code>layout</code>属性会自动设置为<code>selflayout</code>。</li></ol><p>通过这种方式，你可以避免每次创建文章时都重复填写相同的属性（如<code>author</code>、<code>categories</code>等）。例如，你可以为所有文章默认添加一个作者：</p><ul><li>在<code>scaffolds/post.md</code>中定义：<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123;title&#125;&#125;</span><br><span class="line">date: &#123;&#123;date&#125;&#125;</span><br><span class="line">author: aa</span><br><span class="line"><span class="section">layout: post</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure></li></ul><p>这样，每次使用<code>hexo new post</code>创建文章时，<code>author</code>字段就会自动填充为<code>aa</code>，省去了手动添加的麻烦。</p><h4 id="4-themes-theme-name-layout-文件夹"><a href="#4-themes-theme-name-layout-文件夹" class="headerlink" title="4. themes/theme-name/layout/文件夹"></a>4. <code>themes/theme-name/layout/</code>文件夹</h4><p><code>themes/theme-name/layout/</code>文件夹用于定义实际的页面排版和HTML渲染。在这里，你会找到许多<code>.ejs</code>文件，这些文件负责最终的页面展示。</p><p>在Hexo渲染页面时，会按照以下顺序处理：</p><ol><li>根据Markdown文件中的<code>layout</code>属性，Hexo会选择相应的<code>ejs</code>模板进行渲染。</li><li><code>layout.ejs</code>是每个页面的基础模板，它通常包含HTML骨架、头部、导航栏、页脚等通用结构。页面内容通过<code>&lt;%- body %&gt;</code>插入到<code>layout.ejs</code>的指定位置。</li><li>对于每篇博客文章，Hexo会选择<code>post.ejs</code>模板进行渲染。如果你在<code>Front Matter</code>中指定了一个自定义的<code>layout</code>，比如<code>selflayout</code>，那么Hexo会查找<code>selflayout.ejs</code>并使用它来渲染该页面。</li></ol><p><strong>示例：</strong></p><p>假设你的<code>theme</code>目录下有以下结构：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">themes/theme-name/layout/</span><br><span class="line">  ├── layout.ejs</span><br><span class="line">  ├── post.ejs</span><br><span class="line">  ├── selflayout.ejs</span><br></pre></td></tr></table></figure><p>当你创建一个<code>selflayout</code>类型的页面时，Hexo会：</p><ol><li>先加载<code>layout.ejs</code>，这是基础模板。</li><li>然后检查是否存在<code>selflayout.ejs</code>，如果存在，会将其内容插入到<code>layout.ejs</code>的<code>&lt;%- body %&gt;</code>位置。</li></ol><p>如果<code>selflayout.ejs</code>不存在，Hexo会退回使用<code>post.ejs</code>，并根据<code>post.ejs</code>的排版规则进行渲染。</p><h4 id="5-自定义layout"><a href="#5-自定义layout" class="headerlink" title="5. 自定义layout"></a>5. 自定义<code>layout</code></h4><p>除了Hexo提供的默认<code>post</code>、<code>draft</code>和<code>page</code>布局，你还可以创建自己的<code>layout</code>，并且通过修改主题的<code>_config.yml</code>文件来指定默认布局。</p><p><strong>步骤：</strong></p><ol><li>在<code>themes/theme-name/layout/</code>中创建新的<code>.ejs</code>文件，如<code>mycustomlayout.ejs</code>。</li><li>在Markdown文件的Front Matter中指定使用该布局：<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: My Custom Post</span><br><span class="line">date: 2024-11-15</span><br><span class="line"><span class="section">layout: mycustomlayout</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line">This is a custom post with a custom layout.</span><br></pre></td></tr></table></figure></li><li>当Hexo渲染该文章时，会加载<code>layout.ejs</code>和<code>mycustomlayout.ejs</code>，然后将文章内容插入到<code>mycustomlayout.ejs</code>定义的位置。</li></ol><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li><strong><code>scaffolds/</code></strong> 文件夹用于定义新建Markdown文件时的内容模板，帮助我们快速创建符合格式的文章。</li><li><strong><code>themes/theme-name/layout/</code></strong> 文件夹用于定义页面的排版模板，负责最终的HTML渲染过程。</li><li><code>layout</code>属性控制了Hexo如何渲染页面的内容和样式，通过灵活的<code>layout.ejs</code>和自定义的<code>ejs</code>文件，我们可以创建多种布局，满足不同的需求。</li></ul><p>掌握<code>layout</code>的使用，将大大提高我们在Hexo中的主题定制能力。你可以根据不同的需求灵活控制页面结构和样式，使每篇文章、每个页面都具备独特的表现形式。如果你有更具体的布局需求，可以通过创建和修改自定义的<code>layout</code>来实现。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;进阶内容：Hexo中的layout概念&quot;&gt;&lt;a href=&quot;#进阶内容：Hexo中的layout概念&quot; class=&quot;headerlink&quot; title=&quot;进阶内容：Hexo中的layout概念&quot;&gt;&lt;/a&gt;进阶内容：Hexo中的&lt;code&gt;layout&lt;/code</summary>
      
    
    
    
    <category term="编程开发" scheme="https://blog.elykia.cn/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Hexo" scheme="https://blog.elykia.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo教程(三) Web前端“三剑客”</title>
    <link href="https://blog.elykia.cn/posts/20.html"/>
    <id>https://blog.elykia.cn/posts/20.html</id>
    <published>2024-11-29T05:43:07.000Z</published>
    <updated>2024-11-29T15:00:24.653Z</updated>
    
    <content type="html"><![CDATA[<p>作为Web开发的初学者，我在接触时，面临了一个庞大的知识体系，初时感到有些困惑。但通过学习，我发现Web前端的开发其实可以分为几大核心技术，它们共同作用，帮助我们实现动态、精美、互动的网站。</p><p>这三大技术即Web前端的“三剑客”：HTML、CSS和JavaScript，它们各自负责不同的职能。这里将详细介绍它们的作用和基础概念，帮助你入门。</p><p>如果你有进一步学习的需求，我也推荐一些有用的学习资源：</p><ul><li><strong>GitHub</strong>：<a href="https://github.com/qianguyihao/Web">前端入门到进阶图文教程</a></li><li><strong>YouTube</strong>：<a href="https://www.youtube.com/watch?v=W6NZfCO5SIk">JavaScript in 1 Hour</a></li><li><strong>YouTube</strong>：<a href="https://www.youtube.com/watch?v=qz0aGYrrlhU&t=7s">Learn HTML in 1 Hour</a></li><li><strong>YouTube</strong>：<a href="https://www.youtube.com/watch?v=TlB_eWDSMt4">Node.js in 1 Hour</a></li></ul><h3 id="1-HTML（超文本标记语言）"><a href="#1-HTML（超文本标记语言）" class="headerlink" title="1. HTML（超文本标记语言）"></a>1. HTML（超文本标记语言）</h3><p><strong>HTML</strong>（HyperText Markup Language）是网页的骨架，它通过一系列的标记元素来定义网页内容和结构。通过HTML，我们告诉浏览器如何显示文本、图片、链接、表单等页面元素。</p><h4 id="主要概念："><a href="#主要概念：" class="headerlink" title="主要概念："></a>主要概念：</h4><ul><li><strong>HyperText（超文本）</strong>：超越文本的限制，支持在网页中嵌入图片、音频、视频等多媒体内容。</li><li><strong>Markup（标记）</strong>：标记语言，用于描述网页元素。比如：<code>&lt;h1&gt;</code>定义标题，<code>&lt;a&gt;</code>定义链接，<code>&lt;img&gt;</code>定义图片。</li></ul><h4 id="基本标签："><a href="#基本标签：" class="headerlink" title="基本标签："></a>基本标签：</h4><ul><li><code>&lt;html&gt;</code>：网页的根元素。</li><li><code>&lt;head&gt;</code>：包含页面的元数据，如标题、字符编码等。</li><li><code>&lt;body&gt;</code>：页面的主体，包含页面展示的内容。</li><li><code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code>, …<code>&lt;h6&gt;</code>：标题标签，表示内容的层级。</li><li><code>&lt;p&gt;</code>：段落标签，用于定义文本段落。</li><li><code>&lt;a&gt;</code>：锚点标签，用于创建超链接。</li><li><code>&lt;img&gt;</code>：图像标签，用于显示图片。</li></ul><p>HTML是构建网页的基础，掌握它意味着你能够创建网页的结构和内容。</p><h3 id="2-CSS（层叠样式表）"><a href="#2-CSS（层叠样式表）" class="headerlink" title="2. CSS（层叠样式表）"></a>2. CSS（层叠样式表）</h3><p><strong>CSS</strong>（Cascading Style Sheets）负责网页内容的样式化。它通过定义字体、颜色、大小、布局等属性，来使HTML元素美观、整洁并符合设计要求。</p><h4 id="主要概念：-1"><a href="#主要概念：-1" class="headerlink" title="主要概念："></a>主要概念：</h4><ul><li><strong>选择器</strong>：用于选中HTML元素，可以是标签、类名、id等。</li><li><strong>属性</strong>：定义样式的具体规则，如颜色、字体、尺寸、布局等。</li><li><strong>层叠性</strong>：当多个CSS规则作用于同一元素时，优先级较高的规则会覆盖较低的规则。</li></ul><h4 id="基本用法："><a href="#基本用法：" class="headerlink" title="基本用法："></a>基本用法：</h4><ul><li>通过<code>background-color</code>设置背景颜色，<code>color</code>设置文字颜色，<code>font-size</code>设置字体大小等。</li><li><strong>盒模型</strong>（Box Model）：每个HTML元素在浏览器中都可以看作一个盒子，它包括内容区、内边距（padding）、边框（border）和外边距（margin）。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: Arial, sans-serif;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f4f4f4</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.6</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>掌握CSS后，你可以美化网页，调整页面布局，实现响应式设计等。</p><h3 id="3-JavaScript（脚本语言）"><a href="#3-JavaScript（脚本语言）" class="headerlink" title="3. JavaScript（脚本语言）"></a>3. JavaScript（脚本语言）</h3><p><strong>JavaScript</strong>（JS）是一种编程语言，用于为网页添加动态行为和交互功能。它使网页能够响应用户的操作，进行数据处理、显示动画、控制浏览器行为等。</p><h4 id="主要概念：-2"><a href="#主要概念：-2" class="headerlink" title="主要概念："></a>主要概念：</h4><ul><li><strong>ECMAScript</strong>：JavaScript的语法标准，定义了语言的基本结构，如变量声明、控制结构（<code>if</code>、<code>for</code>等）、函数等。</li><li><strong>DOM</strong>（Document Object Model）：文档对象模型，JavaScript通过DOM操作页面上的元素，实现动态效果。</li><li><strong>BOM</strong>（Browser Object Model）：浏览器对象模型，允许JavaScript与浏览器本身交互，如控制浏览器窗口、获取用户输入等。</li></ul><h4 id="基本用法：-1"><a href="#基本用法：-1" class="headerlink" title="基本用法："></a>基本用法：</h4><p>JavaScript通过DOM操作HTML元素，动态改变网页内容或响应用户行为。比如，点击按钮时弹出提示框：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;alert(&#x27;Hello, World!&#x27;)&quot;</span>&gt;</span>Click Me<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JavaScript还广泛用于数据交互，如AJAX请求，它能在不重新加载页面的情况下向服务器请求数据并更新页面。</p><h3 id="4-现代前端技术与工具"><a href="#4-现代前端技术与工具" class="headerlink" title="4. 现代前端技术与工具"></a>4. 现代前端技术与工具</h3><p>随着前端技术的不断发展，单纯掌握HTML、CSS和JavaScript已经不足以满足复杂项目的需求。以下是一些常用的现代前端技术和工具：</p><ul><li><p><strong>前端框架与库</strong>：</p><ul><li><strong>React</strong>：一个用于构建用户界面的JavaScript库，广泛应用于开发单页面应用（SPA）。</li><li><strong>Vue.js</strong>：另一个轻量级的前端框架，易于上手并提供强大的功能。</li><li><strong>Angular</strong>：一个全栈的前端框架，适合构建大型复杂应用。</li></ul></li><li><p><strong>CSS预处理器</strong>：</p><ul><li><strong>Sass</strong>：一种CSS预处理器，它扩展了CSS的功能，支持变量、嵌套规则、混入（mixins）等。</li><li><strong>LESS</strong>：另一个CSS预处理器，类似于Sass。</li></ul></li><li><p><strong>模块化与打包工具</strong>：</p><ul><li><strong>Webpack</strong>：一个模块化打包工具，将所有资源文件（JavaScript、CSS、图片等）打包成一个或多个静态文件，便于部署和管理。</li><li><strong>Babel</strong>：一个JavaScript编译器，可以将最新版本的JavaScript代码（ES6及以上）转换为兼容旧浏览器的代码。</li></ul></li><li><p><strong>版本控制与协作工具</strong>：</p><ul><li><strong>Git</strong>：一个分布式版本控制系统，用于跟踪代码的更改，协作开发。</li><li><strong>GitHub</strong>：一个代码托管平台，允许开发者存储、管理和分享代码。</li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>Web前端的“三剑客”——HTML、CSS和JavaScript是构建网站的基石。HTML负责定义网页的结构，CSS负责控制网页的外观和布局，而JavaScript则赋予网页交互和动态功能。在掌握这三者的基础上，学习现代前端框架、工具和开发流程，将帮助你开发更加复杂和高效的Web应用。</p><p>通过不断学习和实践，你将逐步掌握前端开发的技巧，打造功能丰富、设计精美的网站。如果你对某个具体部分感兴趣，可以深入学习相关技术，也可以参考提供的学习资源进行进阶。</p><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><ol><li><a href="https://github.com/qianguyihao/Web">Github：前端入门到进阶图文教程</a></li><li><a href="https://www.youtube.com/watch?v=W6NZfCO5SIk">YouTube: JavaScript in 1 hour</a></li><li><a href="https://www.youtube.com/watch?v=qz0aGYrrlhU&t=7s">YouTube: Learn HTML in 1 hour</a></li><li><a href="https://www.youtube.com/watch?v=TlB_eWDSMt4">YouTube: Node.js in 1 hour</a></li><li><a href="https://www.runoob.com/css/css-intro.html">CSS</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;作为Web开发的初学者，我在接触时，面临了一个庞大的知识体系，初时感到有些困惑。但通过学习，我发现Web前端的开发其实可以分为几大核心技术，它们共同作用，帮助我们实现动态、精美、互动的网站。&lt;/p&gt;
&lt;p&gt;这三大技术即Web前端的“三剑客”：HTML、CSS和JavaScr</summary>
      
    
    
    
    <category term="编程开发" scheme="https://blog.elykia.cn/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Hexo" scheme="https://blog.elykia.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo教程(二) 基本文件结构</title>
    <link href="https://blog.elykia.cn/posts/19.html"/>
    <id>https://blog.elykia.cn/posts/19.html</id>
    <published>2024-11-15T13:11:00.000Z</published>
    <updated>2024-11-15T14:38:05.035Z</updated>
    
    <content type="html"><![CDATA[<p>本篇是主要Hexo的基本文件结构介绍。以下是本篇的核心内容：</p><hr><h4 id="基本文件结构"><a href="#基本文件结构" class="headerlink" title="基本文件结构"></a>基本文件结构</h4><p>在成功运行 Hexo 后，使用命令 <code>hexo s</code> 或 <code>hexo d</code>，你会在博客文件夹中看到如下文件结构：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">- _config.yml</span><br><span class="line">- <span class="built_in">source</span>/</span><br><span class="line">    |--- _posts/</span><br><span class="line">    |--- _data/</span><br><span class="line">    |--- drafts/</span><br><span class="line">    |--- about/</span><br><span class="line">    |--- other folders</span><br><span class="line">- themes/</span><br><span class="line">    |--- one or more theme folders, <span class="keyword">in</span> each folder</span><br><span class="line">         |--- _config.yml</span><br><span class="line">         |--- languages/</span><br><span class="line">              |--- yaml files</span><br><span class="line">         |--- layout/</span><br><span class="line">              |--- (_partial/)</span><br><span class="line">              |--- (_widget/)</span><br><span class="line">              |--- layout.ejs</span><br><span class="line">              |--- index.ejs</span><br><span class="line">              |--- post.ejs</span><br><span class="line">              |--- other ejs files</span><br><span class="line">         |--- <span class="built_in">source</span>/</span><br><span class="line">              |--- css/</span><br><span class="line">              |--- js/</span><br><span class="line">              |--- libs/</span><br><span class="line">              |--- medias/</span><br><span class="line">         |--- Others</span><br><span class="line">- package-lock.json</span><br><span class="line">- package.json</span><br><span class="line">- scaffolds/</span><br><span class="line">    |--- several markdown files</span><br><span class="line">- public/</span><br><span class="line">- node_modules/</span><br><span class="line">- db.json</span><br></pre></td></tr></table></figure><h4 id="重要的文件与文件夹："><a href="#重要的文件与文件夹：" class="headerlink" title="重要的文件与文件夹："></a>重要的文件与文件夹：</h4><ol><li><p><strong>两个 <code>config.yml</code> 文件</strong>：</p><p>在DIY自己的网站时，配置文件的修改是第一步。Hexo作为静态网站生成器，主要有两个 <code>_config.yml</code> 文件，分别用于全局配置和主题配置。这里将它们称为“大config”和“小config”，便于区分。</p><ul><li><strong>大 <code>config.yml</code></strong>：位于项目根目录下，如 <code>_config.yml</code>。这是整个网站的全局配置文件，涵盖了网站的基本设置，包括标题、描述、URL样式（permalink）等。同时，这里也指定了要使用的主题。你只需要将 <code>theme:</code> 属性设置为 <code>themes/</code> 文件夹下你希望使用的主题文件夹名即可。</li><li><strong>小 <code>config.yml</code></strong>：位于 <code>themes/</code> 文件夹下，和每个主题的文件夹对应，如 <code>_config.anzhiyu.yml</code>。小config是针对某一特定主题的设置，每个主题可能包含不同的配置项。具体如何配置，你可以参考对应主题的官方文档。</li></ul></li><li><p><strong>source 文件夹</strong>：</p><p><code>source</code> 文件夹是进行网站内容创作的地方，主要用于博客文章的写作与更新。该文件夹包含以下几个子目录：</p><ul><li><strong>_posts&#x2F;</strong>：存放发布的文章文件。Hexo支持Markdown格式，文章将在博客上显示。</li><li><strong>drafts&#x2F;</strong>：草稿文件夹，存放未发布的文章。默认情况下，Hexo不会渲染草稿文件，这个文件夹主要用于文章创作的中间状态。</li><li><strong>_data&#x2F;</strong>：用于存放一些不直接显示在文章里的数据，且可能需要在多个地方复用的内容。例如，友情链接、社交媒体信息等，可以通过 <code>site.data.filename</code> 来调用这些数据。</li><li><strong>categories&#x2F;</strong>、<strong>tags&#x2F;</strong>、<strong>404&#x2F;</strong> 等文件夹，分别用来存放类别页面、标签页面和404错误页面的内容。这些文件夹与相应的CSS、EJS文件匹配，用于定制页面的显示。</li></ul></li><li><p><strong>themes 文件夹</strong>：</p><p><code>source</code> 文件夹是进行网站内容创作的地方，主要用于博客文章的写作与更新。该文件夹包含以下几个子目录：</p><ul><li><strong>小config文件</strong>：与当前主题相关的配置，如启用某些主题特性或功能。</li><li><strong>languages&#x2F;</strong>：存储翻译文件，用于更改网站的显示语言。</li><li><strong>layout&#x2F;</strong>：一系列EJS模板文件，定义了网站的结构、功能以及如何呈现内容。常见的文件夹如：<ul><li><code>layout/_partial/</code>：存放网站共享模块（如页眉、页脚）。</li><li><code>layout/_layouts/</code>：存放整个页面的框架，定义页面的整体结构。</li></ul></li><li><strong>source&#x2F;</strong>：包含主题的CSS样式、图片、Logo等资源文件。此处也是添加额外功能库的地方，如集成Gitalk评论插件、Echarts图表等。</li></ul></li><li><p><strong>其他文件夹</strong>：</p><p>除了上面提到的主要文件夹，Hexo项目中还有一些其他文件夹，通常不需要频繁修改，除非你需要进行更深入的定制：</p><ul><li><strong>scaffolds&#x2F;</strong>：存放默认的文章模板文件。</li><li><strong>public&#x2F;</strong>：通过 <code>hexo clean</code> 和 <code>hexo generate</code> 命令生成的静态文件，最终会被发布到Web服务器。</li></ul></li></ol><hr><h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><ol><li><a href="https://www.youtube.com/watch?v=Jiwbmyc4nCA&list=PLLAZ4kZ9dFpOMJR6D25ishrSedvsguVSm&index=6">YouTube Hexo系列视频</a></li><li><a href="https://hexo.io/zh-cn/docs/data-files.html">Hexo data文件夹</a></li><li><a href="https://github.com/gitalk/gitalk/">gitalk</a></li><li><a href="https://echarts.apache.org/zh/index.html">echarts</a></li><li><a href="https://github.com/qianguyihao/Web">Github：前端入门到进阶图文教程</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本篇是主要Hexo的基本文件结构介绍。以下是本篇的核心内容：&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;基本文件结构&quot;&gt;&lt;a href=&quot;#基本文件结构&quot; class=&quot;headerlink&quot; title=&quot;基本文件结构&quot;&gt;&lt;/a&gt;基本文件结构&lt;/h4&gt;&lt;p&gt;在成功运行 Hexo </summary>
      
    
    
    
    <category term="编程开发" scheme="https://blog.elykia.cn/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Hexo" scheme="https://blog.elykia.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo教程(一) 博客更新指南</title>
    <link href="https://blog.elykia.cn/posts/18.html"/>
    <id>https://blog.elykia.cn/posts/18.html</id>
    <published>2024-11-06T13:47:40.000Z</published>
    <updated>2024-11-15T16:06:46.888Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo教程-一-博客更新指南"><a href="#Hexo教程-一-博客更新指南" class="headerlink" title="Hexo教程(一) 博客更新指南"></a>Hexo教程(一) 博客更新指南</h1><p>Hexo 是一个强大的静态网站生成器，然而<a href="https://hexo.io/zh-cn/docs/writing.html">Hexo 官方文档</a>往往缺乏对日常操作的指导性，难以分清阅读顺序和内容的重要性。为了更便捷地使用 Hexo 更新博客，这里总结了一套完整的操作流程，并附上每一步背后的原理解释。</p><h2 id="一次-Hexo-更新博客的基础操作流程"><a href="#一次-Hexo-更新博客的基础操作流程" class="headerlink" title="一次 Hexo 更新博客的基础操作流程"></a>一次 Hexo 更新博客的基础操作流程</h2><ol><li>新建一篇文章</li><li>文章写作</li><li>本地预览更新后的博客</li><li>远程部署更新博客</li></ol><h2 id="1-新建文章"><a href="#1-新建文章" class="headerlink" title="1. 新建文章"></a>1. 新建文章</h2><p>Hexo 渲染一篇 post 的流程大致如下：</p><ol><li>获取一个 Markdown 文件</li><li>根据该文件的 layout 类型进行样式排版</li><li>生成 HTML 文件</li><li>最终展示到网页端</li></ol><h3 id="方法一：使用-Hexo-的命令"><a href="#方法一：使用-Hexo-的命令" class="headerlink" title="方法一：使用 Hexo 的命令"></a>方法一：使用 Hexo 的命令</h3><p>创建文章的常见命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>通常我们只需使用默认 layout（post）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;我的第一篇文章&quot;</span></span><br></pre></td></tr></table></figure><p>该命令会生成一个 <strong>layout</strong> 为 <code>post</code> 类型的 Markdown 文件，存储在 <code>source/_posts/</code> 目录下，命名为 <code>我的第一篇文章.md</code>。</p><h3 id="方法二：手动创建-Markdown-文件"><a href="#方法二：手动创建-Markdown-文件" class="headerlink" title="方法二：手动创建 Markdown 文件"></a>方法二：手动创建 Markdown 文件</h3><p>你也可以直接在编辑器（如 Typora）中新建文件，并将其保存到 <code>source/_posts/</code> 文件夹中。</p><p>这种方法的优点是快捷灵活，尤其是当需要同时处理多个文档时。但缺点是需要手动添加文章头部信息（Front Matter），例如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">&quot;我的第一篇文章&quot;</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2024-09-01</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">&quot;作者&quot;</span></span><br><span class="line"><span class="attr">categories:</span> [<span class="string">&quot;分类1&quot;</span>]</span><br><span class="line"><span class="attr">tags:</span> [<span class="string">&quot;标签1&quot;</span>]</span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong> 如果文章包含图片或其他附件，需要在 <code>source/_posts/</code> 目录下创建一个同名文件夹存放这些附件。</p><h2 id="2-文章写作"><a href="#2-文章写作" class="headerlink" title="2. 文章写作"></a>2. 文章写作</h2><p>按照 Markdown 格式编写文章内容，下面介绍一些常用的额外功能：插入本地图片、展示本地 PDF、展示数学公式、链接到本站其他博客。</p><h3 id="插入本地图片"><a href="#插入本地图片" class="headerlink" title="插入本地图片"></a>插入本地图片</h3><p>可以使用以下几种方式插入本地图片：</p><ol><li><p><strong>绝对路径引用：</strong></p><p>将图片存储于 <code>source/images</code> 文件夹中，然后在 Markdown 文件中插入：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">图片描述</span>](<span class="link">images/图片名.格式</span>)</span><br></pre></td></tr></table></figure></li><li><p><strong>相对路径引用：</strong></p><p>将图片存储于与文章同名的文件夹中，然后插入：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">图片描述</span>](<span class="link">图片名.格式</span>)</span><br></pre></td></tr></table></figure></li><li><p><strong>HTML 语法引用：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片名.格式&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">title</span>=<span class="string">&quot;描述&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;替代描述&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p><strong>推荐使用相对路径或绝对路径引用，简洁且兼容性好。</strong></p><h3 id="展示本地-PDF"><a href="#展示本地-PDF" class="headerlink" title="展示本地 PDF"></a>展示本地 PDF</h3><p>使用插件 <code>hexo-pdf</code> 或 Markdown 自带的文件引用方式：</p><ol><li><p><strong>使用插件：</strong></p><p>安装插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-pdf</span><br></pre></td></tr></table></figure><p>在 Markdown 文件中插入：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf 文件名.pdf %&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>Markdown 文件引用：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">PDF 文件描述</span>](<span class="link">文件名.pdf</span>)</span><br></pre></td></tr></table></figure></li></ol><p>插件方式更适合直接阅读 PDF 内容，而文件引用则生成下载链接。</p><h3 id="展示数学公式"><a href="#展示数学公式" class="headerlink" title="展示数学公式"></a>展示数学公式</h3><ol><li><p>安装渲染器插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure></li><li><p>修改 <code>_config.yml</code> 配置文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>在 Markdown 文件的 Front Matter 中启用 MathJax：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>使用 Markdown 语法插入公式：</p><ul><li>行内公式：<code>$ 公式 $</code></li><li>块级公式：<code>$$ 公式 $$</code></li></ul></li></ol><h3 id="链接到本站其他博客"><a href="#链接到本站其他博客" class="headerlink" title="链接到本站其他博客"></a>链接到本站其他博客</h3><p>使用相对路径引用已发布的 HTML 文件。例如，链接到另一篇文章：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">另一篇文章</span>](<span class="link">../文章路径/index.html</span>)</span><br></pre></td></tr></table></figure><p>非常抱歉我遗漏了这些重要内容。我会把它们加回来,并稍作调整以使整体结构更加连贯。以下是修改后的部分:</p><h3 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h3><p>可以在<code>source/_drafts/</code>文件夹下创建markdown文件作为草稿。这些文档不会被渲染,也不会显示在最终的博客页面中。当你准备发布时,可以使用<code>hexo publish [layout] &lt;title&gt;</code>命令将草稿移动到<code>_posts</code>文件夹。</p><h2 id="3-本地预览"><a href="#3-本地预览" class="headerlink" title="3. 本地预览"></a>3. 本地预览</h2><p>常用命令:</p><ul><li><code>hexo clean</code>: 清理生成的文件</li><li><code>hexo g</code> 或 <code>hexo generate</code>: 生成静态文件</li><li><code>hexo s</code> 或 <code>hexo server</code>: 启动本地服务器</li><li><code>hexo s -p 5000</code>: 指定端口号(例如5000)</li></ul><p>这些命令的具体作用:</p><ul><li><code>hexo clean</code>: 删除整个<code>public/</code>文件夹。通常在更新了<code>_config.yml</code>或删除了已有博文后使用。由于耗时较长,建议偶尔使用。</li><li><code>hexo generate</code>: 生成静态文件夹<code>public/</code>,将markdown转换为html等网页文件。</li><li><code>hexo server</code>: 将生成的静态文件部署到本地指定端口。默认可通过<code>localhost:4000</code>访问。</li></ul><p>通常的预览流程:</p><ol><li><code>hexo g; hexo s</code> </li><li>浏览器访问<code>http://localhost:4000</code>预览</li><li>修改文章内容,刷新页面即可看到更新</li></ol><p>Hexo的一个便利特性是,在本地预览时,你可以直接修改Markdown文件,然后刷新浏览器就能看到更新,无需重新执行<code>hexo g</code>。这包括修改文章内容、Front-Matter属性等。</p><p>但对于某些深层次修改(如主题文件、js函数、css样式等),可能仍需要重新生成。</p><p>注意: 使用<code>Ctrl+C</code>(而非<code>Ctrl+Z</code>)来停止本地服务器。如果遇到端口被占用的错误,可以使用以下命令解决:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:4000</span><br><span class="line"><span class="built_in">kill</span> -9 &lt;pid&gt;</span><br></pre></td></tr></table></figure><h2 id="4-远程部署"><a href="#4-远程部署" class="headerlink" title="4. 远程部署"></a>4. 远程部署</h2><p>常用命令:</p><ul><li><code>hexo d</code> 或 <code>hexo deploy</code>: 部署到远程服务器</li><li><code>hexo g -d</code>: 生成并部署</li></ul><p><code>hexo deploy</code>命令会将网站部署到服务器上,实际上是更新你GitHub仓库<code>**.github.io</code>的指定分支。</p><p>完整的部署流程:</p><ol><li><p><code>hexo g; hexo s</code> 本地预览直到满意</p></li><li><p><code>hexo d</code> 或 <code>hexo g -d</code> 部署到远程</p></li><li><p>如果使用双分支管理,还需要更新源文件分支:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;更新说明&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure></li></ol><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ol><li><a href="https://hexo.io/zh-cn/docs/writing.html">hexo官方文档</a></li><li><a href="https://zhuanlan.zhihu.com/p/156915260">知乎Hexo博客写文章及基本操作</a></li><li><a href="https://hexo.io/zh-cn/docs/front-matter">Front-Matter official manual</a></li><li><a href="https://www.youtube.com/watch?v=Jiwbmyc4nCA&list=PLLAZ4kZ9dFpOMJR6D25ishrSedvsguVSm&index=6">YouTube Hexo系列视频</a></li><li><a href="https://fuhailin.github.io/Hexo-images/">赵大宝hexo-images</a></li><li><a href="https://blog.csdn.net/u010820857/article/details/82356974">csdn博客hexo添加pdf插件</a></li><li><a href="https://blog.csdn.net/qq_38496329/article/details/104065659">csdn:hexo博客支持数学公式</a></li><li><a href="https://fuguigui.github.io/hexo2/">一次完整的Hexo写作流程</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hexo教程-一-博客更新指南&quot;&gt;&lt;a href=&quot;#Hexo教程-一-博客更新指南&quot; class=&quot;headerlink&quot; title=&quot;Hexo教程(一) 博客更新指南&quot;&gt;&lt;/a&gt;Hexo教程(一) 博客更新指南&lt;/h1&gt;&lt;p&gt;Hexo 是一个强大的静态网站生</summary>
      
    
    
    
    <category term="编程开发" scheme="https://blog.elykia.cn/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Hexo" scheme="https://blog.elykia.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>知乎图片去水印下载的方法</title>
    <link href="https://blog.elykia.cn/posts/17.html"/>
    <id>https://blog.elykia.cn/posts/17.html</id>
    <published>2024-10-27T15:22:12.000Z</published>
    <updated>2024-11-15T15:57:40.767Z</updated>
    
    <content type="html"><![CDATA[<p>按下F12看了下代码，定位到图片。</p><p><img src="https://bu.dusays.com/2024/10/27/671e5a5ecbc2f.png"></p><p>蓝框中是原图链接，带用户水印的，跟最后的<code>data-original</code>里面的链接呈现的都是正常情况下的。</p><p>而<code>data-original-token</code>中的数据，跟其它几个图片链接的文件名很相似，于是我尝试用它替换掉其它图片的文件名，然后显示就出了原图。</p><ul><li><p><strong>原图</strong>（有水印）</p><p><code>https://picx.zhimg.com/v2-bdeb30bcab773ef7c9e16cf38b6dc991_b.jpg</code></p></li></ul><p><img src="https://picx.zhimg.com/v2-bdeb30bcab773ef7c9e16cf38b6dc991_b.jpg"></p><ul><li><p><strong>data-original</strong>（有水印）</p><p><code>https://picx.zhimg.com/v2-bdeb30bcab773ef7c9e16cf38b6dc991_r.jpg</code></p></li></ul><p><img src="https://picx.zhimg.com/v2-bdeb30bcab773ef7c9e16cf38b6dc991_r.jpg"></p><ul><li><p><strong>data-original-token</strong>（无水印）</p><p><code>https://picx.zhimg.com/v2-af2b3d4381fcb4a20897760d38482cde.jpg</code></p></li></ul><p><img src="https://picx.zhimg.com/v2-af2b3d4381fcb4a20897760d38482cde.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;按下F12看了下代码，定位到图片。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bu.dusays.com/2024/10/27/671e5a5ecbc2f.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;蓝框中是原图链接，带用户水印的，跟最后的&lt;code&gt;data-original&lt;/c</summary>
      
    
    
    
    <category term="编程开发" scheme="https://blog.elykia.cn/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="知乎" scheme="https://blog.elykia.cn/tags/%E7%9F%A5%E4%B9%8E/"/>
    
    <category term="魔改" scheme="https://blog.elykia.cn/tags/%E9%AD%94%E6%94%B9/"/>
    
  </entry>
  
  <entry>
    <title>安知鱼主题文件魔改记录</title>
    <link href="https://blog.elykia.cn/posts/16.html"/>
    <id>https://blog.elykia.cn/posts/16.html</id>
    <published>2024-10-24T16:34:14.000Z</published>
    <updated>2024-11-29T14:51:09.954Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文只是记录，并非教程，请直接不要按照本文修改，以免报错。<br>其实本站并没有做多修改，写此文章仅为记录，方便以后升级更新！</p></blockquote><hr><h3 id="1-修改-analytics-pug"><a href="#1-修改-analytics-pug" class="headerlink" title="1. 修改 analytics.pug"></a>1. 修改 <code>analytics.pug</code></h3><p>在**<code>themes/anzhiyu/layout/includes/head/analytics.pug</code>**中</p><p>最下面<strong>33行</strong>，添加以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if theme.umami_analytics </span><br><span class="line">  script(defer, src=&#x27;https://umami.elykia.cn/script.js&#x27;, data-website- id=`$&#123;theme.umami_analytics&#125;`)</span><br></pre></td></tr></table></figure><hr><h3 id="2-修改-head-pug"><a href="#2-修改-head-pug" class="headerlink" title="2. 修改 head.pug"></a>2. 修改 <code>head.pug</code></h3><p>在 <strong><code>themes/anzhiyu/layout/includes/head.pug</code></strong> 中</p><p>最下面<strong>94行</strong>，添加以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//- Umami</span><br><span class="line">if theme.Umami</span><br><span class="line">  if theme.Umami.umami_url</span><br><span class="line">    script(async defer src=`$&#123;theme.Umami.umami_url_js&#125;` data-website-id=`$&#123;theme.Umami.umami_id&#125;` data-host-url=`$&#123;theme.Umami.umami_url&#125;`)</span><br><span class="line">  else</span><br><span class="line">    script(async defer src=`$&#123;theme.Umami.umami_url_js&#125;` data-website-id=`$&#123;theme.Umami.umami_id&#125;`)</span><br></pre></td></tr></table></figure><hr><h3 id="3-修改-about-styl"><a href="#3-修改-about-styl" class="headerlink" title="3. 修改 about.styl"></a>3. 修改 <code>about.styl</code></h3><p>在 <strong><code>themes/anzhiyu/source/css/_page/about.styl</code></strong> 中</p><p>大致<strong>1265 行</strong>：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- <span class="keyword">if</span> (<span class="built_in">hexo-config</span>(<span class="string">&#x27;LA.enable&#x27;</span>)) &#123;</span><br><span class="line">+ <span class="keyword">if</span> (<span class="built_in">hexo-config</span>(<span class="string">&#x27;Umami.enable&#x27;</span>)) &#123;</span><br></pre></td></tr></table></figure><hr><h3 id="4-修改-about-pug"><a href="#4-修改-about-pug" class="headerlink" title="4. 修改 about.pug"></a>4. 修改 <code>about.pug</code></h3><p>在 <strong><code>themes/anzhiyu/layout/includes/page/about.pug</code></strong> 中<br>修改过多，故直接贴出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br></pre></td><td class="code"><pre><span class="line">if site.data.about</span><br><span class="line">  - let aboutData = site.data.about</span><br><span class="line">  each item in aboutData</span><br><span class="line">    - let subtitle = item.subtitle || config.subtitle</span><br><span class="line">    - let avatarImg = item.avatarImg || theme.avatar.img</span><br><span class="line">    - let aboutName = item.name || theme.author</span><br><span class="line">    - let aboutDescription = item.description || config.description</span><br><span class="line">    - let helloAbout = item.helloAbout</span><br><span class="line">    - let skillsTips = item.skillsTips</span><br><span class="line">    - let careers = item.careers</span><br><span class="line">    - let crrList = careers.list</span><br><span class="line">    - let crrItem = careers.item</span><br><span class="line">    - let avatarSkills = item.avatarSkills</span><br><span class="line">    #about-page</span><br><span class="line">      .author-box</span><br><span class="line">        if avatarSkills</span><br><span class="line">          .author-tag-left</span><br><span class="line">            each item in avatarSkills.left</span><br><span class="line">              span.author-tag=item</span><br><span class="line">        .author-img</span><br><span class="line">          img.no-lightbox(src=url_for(avatarImg) onerror=`this.onerror=null;this.src=&#x27;` + url_for(theme.error_img.flink) + `&#x27;` alt=&quot;avatar&quot;)</span><br><span class="line">        if avatarSkills</span><br><span class="line">          .author-tag-right</span><br><span class="line">            each item in avatarSkills.right</span><br><span class="line">              span.author-tag=item</span><br><span class="line">      p.p.center.logo.large 关于我</span><br><span class="line">      p.p.center.small=subtitle</span><br><span class="line">      .author-content</span><br><span class="line">        .author-content-item.myInfoAndSayHello</span><br><span class="line">          .title1 你好，很高兴认识你👋</span><br><span class="line">          .title2</span><br><span class="line">            | 我叫 </span><br><span class="line">            span.inline-word=aboutName</span><br><span class="line">          .title1=aboutDescription</span><br><span class="line">        .aboutsiteTips.author-content-item</span><br><span class="line">          - let &#123; tips, title1, title2, word &#125; = item.aboutsiteTips</span><br><span class="line">          .author-content-item-tips= tips</span><br><span class="line">          h2</span><br><span class="line">            = title1</span><br><span class="line">            br</span><br><span class="line">            = title2</span><br><span class="line">            .mask</span><br><span class="line">              each wordItem, index in word</span><br><span class="line">                if index &lt; word.length - 2</span><br><span class="line">                  span(class=(index === 0 ? &#x27;first-tips&#x27; : &#x27;&#x27;))= wordItem</span><br><span class="line">              span(data-up)= word[word.length - 2]</span><br><span class="line">              |  </span><br><span class="line">              span(data-show)= word[word.length - 1]</span><br><span class="line">      </span><br><span class="line">      .hello-about</span><br><span class="line">        .cursor(style=&#x27;translate:none;rotate:none;scale:none;transform:translate(721px,180px)&#x27;)</span><br><span class="line">        .shapes</span><br><span class="line">          .shape.shape-1(style=&#x27;translate:none;rotate:none;scale:none;transform:translate(721px,180px)&#x27;)</span><br><span class="line">          .shape.shape-2(style=&#x27;translate:none;rotate:none;scale:none;transform:translate(721px,180px)&#x27;)</span><br><span class="line">          .shape.shape-3(style=&#x27;translate:none;rotate:none;scale:none;transform:translate(721px,180px)&#x27;)</span><br><span class="line">        .content</span><br><span class="line">          h1=helloAbout</span><br><span class="line">      </span><br><span class="line">      .author-content</span><br><span class="line">        .author-content-item.skills</span><br><span class="line">          .card-content</span><br><span class="line">            .author-content-item-tips=skillsTips.tips</span><br><span class="line">            span.author-content-item-title=skillsTips.title</span><br><span class="line">            .skills-style-group</span><br><span class="line">              include ../anzhiyu/tags-group-all.pug</span><br><span class="line">              if site.data.creativity</span><br><span class="line">                .skills-list</span><br><span class="line">                  each i in site.data.creativity</span><br><span class="line">                    each item, index in i.creativity_list</span><br><span class="line">                      .skill-info</span><br><span class="line">                        .skill-icon(style=`background: $&#123;item.color&#125;`)</span><br><span class="line">                          img.no-lightbox(title=item.name, src=item.icon, alt=item.name)</span><br><span class="line">                        .skill-name</span><br><span class="line">                          span=item.name </span><br><span class="line">                  .etc ...</span><br><span class="line">        .author-content-item.careers</span><br><span class="line">          .card-content</span><br><span class="line">            .author-content-item-tips=careers.tips</span><br><span class="line">            span.author-content-item-title=careers.title</span><br><span class="line">            .careers-group</span><br><span class="line">              if crrList</span><br><span class="line">                each career in crrList</span><br><span class="line">                  .career-item</span><br><span class="line">                    .circle(style=`background:$&#123;career.color ? career.color : &quot;#357ef5&quot;&#125;`)</span><br><span class="line">                    .name=career.desc</span><br><span class="line">              else</span><br><span class="line">                .careers-none</span><br><span class="line">            if careers.img</span><br><span class="line">              img.author-content-img.no-lightbox(alt=careers.tips, src=url_for(careers.img) onerror=`this.onerror=null;this.src=&#x27;` + url_for(theme.error_img.flink) + `&#x27;`)</span><br><span class="line">      </span><br><span class="line">      .author-content</span><br><span class="line">        if theme.Umami.enable</span><br><span class="line">          - let cover = item.statistic.cover</span><br><span class="line">          .about-statistic.author-content-item(style=`background: url($&#123;cover&#125;) top / cover no-repeat;`)</span><br><span class="line">            .card-content</span><br><span class="line">              .author-content-item-tips 数据</span><br><span class="line">              span.author-content-item-title 访问统计</span><br><span class="line">              #statistic</span><br><span class="line">              .post-tips</span><br><span class="line">                | 统计信息来自</span><br><span class="line">                a(href=&#x27;https://umami.elykia.cn&#x27;, target=&#x27;_blank&#x27;, rel=&#x27;noopener nofollow&#x27;) Umami统计</span><br><span class="line">              .banner-button-group</span><br><span class="line">                - let link = item.statistic.link</span><br><span class="line">                - let text = item.statistic.text</span><br><span class="line">                a.banner-button(onclick=`pjax.loadUrl(&quot;$&#123;link&#125;&quot;)`)</span><br><span class="line">                  i.anzhiyufont.anzhiyu-icon-arrow-circle-right</span><br><span class="line">                  |  </span><br><span class="line">                  span.banner-button-text=text</span><br><span class="line">        .author-content-item-group.column.mapAndInfo</span><br><span class="line">          - let mapBackground = item.map.background</span><br><span class="line">          - let mapBackgroundDark = item.map.backgroundDark</span><br><span class="line">          style.</span><br><span class="line">            .author-content-item.map &#123;</span><br><span class="line">              background-image: url(#&#123;mapBackground&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            [data-theme=&#x27;dark&#x27;] .author-content-item.map &#123;</span><br><span class="line">              background-image: url(#&#123;mapBackgroundDark&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">          .author-content-item.map.single</span><br><span class="line">            - let mapTitle = item.map.title</span><br><span class="line">            - let mapStrengthenTitle = item.map.StrengthenTitle</span><br><span class="line">            span.map-title=mapTitle</span><br><span class="line">              b=mapStrengthenTitle</span><br><span class="line">          .author-content-item.selfInfo.single</span><br><span class="line">            - let &#123; selfInfoTips1, selfInfoContentYear, selfInfoTips2, selfInfoContent2, selfInfoTips3, selfInfoContent3 &#125; = item.selfInfo</span><br><span class="line">            div</span><br><span class="line">              span.selfInfo-title=selfInfoTips1</span><br><span class="line">              |  </span><br><span class="line">              span.selfInfo-content#selfInfo-content-year(style=&#x27;color:#43a6c6&#x27;)=selfInfoContentYear</span><br><span class="line">            div</span><br><span class="line">              span.selfInfo-title=selfInfoTips2</span><br><span class="line">              |  </span><br><span class="line">              span.selfInfo-content(style=&#x27;color:#c69043&#x27;)=selfInfoContent2</span><br><span class="line">            div</span><br><span class="line">              span.selfInfo-title=selfInfoTips3</span><br><span class="line">              |  </span><br><span class="line">              span.selfInfo-content(style=&#x27;color:#b04fe6&#x27;)=selfInfoContent3</span><br><span class="line">      </span><br><span class="line">      .author-content</span><br><span class="line">        .author-content-item.personalities</span><br><span class="line">          - let &#123;author_name, personality_type, photo_url, personality_img, name_url, personality_type_color&#125; = item.personalities</span><br><span class="line">          .author-content-item-tips 性格</span><br><span class="line">          span.author-content-item-title= author_name</span><br><span class="line">          .title2(style=`color:$&#123;personality_type_color ? personality_type_color : &quot;#ac899c&quot;&#125;`)= personality_type</span><br><span class="line">          .post-tips</span><br><span class="line">            | 在 </span><br><span class="line">            a(href=&#x27;https://www.16personalities.com/&#x27;, target=&#x27;_blank&#x27;, rel=&#x27;noopener nofollow&#x27;) 16personalities</span><br><span class="line">            |  了解更多关于 </span><br><span class="line">            a(target=&#x27;_blank&#x27;, rel=&#x27;noopener external nofollow&#x27;, href= name_url)= author_name</span><br><span class="line">          .image</span><br><span class="line">            img.no-lightbox(src=url_for(personality_img), alt=&#x27;人格&#x27;)</span><br><span class="line">        .author-content-item.myphoto</span><br><span class="line">          img.author-content-img.no-lightbox(alt=&#x27;自拍&#x27;, src=url_for(photo_url))</span><br><span class="line">      </span><br><span class="line">      .author-content</span><br><span class="line">        .author-content-item.maxim</span><br><span class="line">          - let &#123;maxim_tips, maxim_top, maxim_bottom&#125; = item.maxim</span><br><span class="line">          .author-content-item-tips=maxim_tips</span><br><span class="line">          span.maxim-title</span><br><span class="line">            span(style=&#x27;opacity:.6;margin-bottom:8px&#x27;)=maxim_top</span><br><span class="line">            |  </span><br><span class="line">            span=maxim_bottom</span><br><span class="line">        .author-content-item.buff</span><br><span class="line">          .card-content</span><br><span class="line">          - let &#123;buff_tips, buff_top, buff_bottom&#125; = item.buff</span><br><span class="line">            .author-content-item-tips=buff_tips</span><br><span class="line">            span.buff-title</span><br><span class="line">              span(style=&#x27;opacity:.6;margin-bottom:8px&#x27;)=buff_top</span><br><span class="line">              |  </span><br><span class="line">              span=buff_bottom</span><br><span class="line">          .card-background-icon</span><br><span class="line">            i.anzhiyufont.anzhiyu-icon-dice-d20</span><br><span class="line"></span><br><span class="line">      .author-content</span><br><span class="line">        - let &#123;game_tips, game_title, game_uid, game_bg&#125; = item.game</span><br><span class="line">        .author-content-item.game-yuanshen(style=`background: url($&#123;game_bg&#125;) top / cover no-repeat;`)</span><br><span class="line">          .card-content</span><br><span class="line">            .author-content-item-tips=game_tips</span><br><span class="line">            span.author-content-item-title=game_title</span><br><span class="line">            .content-bottom</span><br><span class="line">              .icon-group</span><br><span class="line">                .loading-bar(role=&#x27;presentation&#x27;, aria-hidden=&#x27;true&#x27; style=`$&#123;game_title != &quot;原神&quot; ? &quot;display: none&quot;: &quot;&quot;&#125;`)</span><br><span class="line">              .tips.game-yuanshen-uid=game_uid</span><br><span class="line">        .author-content-item.comic-content</span><br><span class="line">          .card-content</span><br><span class="line">            - let &#123;comic_tips, comic_title, comic_list&#125; = item.comic</span><br><span class="line">            .author-content-item-tips=comic_tips</span><br><span class="line">            .author-content-item-title=comic_title</span><br><span class="line">            .comic-box</span><br><span class="line">              if comic_list</span><br><span class="line">                each i in comic_list</span><br><span class="line">                  a.comic-item(href=i.href, target=&quot;_blank&quot;, title=i.name)</span><br><span class="line">                    .comic-item-cover</span><br><span class="line">                      img(src=i.cover, alt=i.name)</span><br><span class="line">      </span><br><span class="line">      .author-content</span><br><span class="line">        - let &#123;music_tips, music_title, music_link, music_bg&#125; = item.music</span><br><span class="line">        - let &#123;like_tips, like_title, like_bottom, like_bg&#125; = item.like</span><br><span class="line">        .author-content-item.like-technology(style=`background: url($&#123;like_bg&#125;) top / cover no-repeat;`)</span><br><span class="line">          .card-content</span><br><span class="line">            .author-content-item-tips=like_tips</span><br><span class="line">            span.author-content-item-title=like_title</span><br><span class="line">            .content-bottom</span><br><span class="line">              .tips</span><br><span class="line">                | 跟 #&#123;aboutName&#125; 一起开拓银河</span><br><span class="line">                br</span><br><span class="line">                | 愿此行，终抵群星</span><br><span class="line">        .author-content-item.like-music(style=`background: url($&#123;music_bg&#125;) top / cover no-repeat;`)</span><br><span class="line">          .card-content</span><br><span class="line">            .author-content-item-tips=music_tips</span><br><span class="line">            span.author-content-item-title=music_title</span><br><span class="line">            .content-bottom</span><br><span class="line">              .tips=&#x27;摆烂中&#x27;</span><br><span class="line">            .banner-button-group</span><br><span class="line">              a.banner-button(onclick=`pjax.loadUrl(&quot;$&#123;music_link&#125;&quot;)`)</span><br><span class="line">                i.anzhiyufont.anzhiyu-icon-arrow-circle-right</span><br><span class="line">                |  </span><br><span class="line">                span.banner-button-text 回到首页</span><br><span class="line"></span><br><span class="line">      .author-content</span><br><span class="line">        .create-site-post.author-content-item.single</span><br><span class="line">          .author-content-item-tips 心路历程</span><br><span class="line">          | 欢迎来到我的博客！这是我用来</span><br><span class="line">          strong 记录、分享和沉淀知识与兴趣</span><br><span class="line">          | 的地方，希望它能成为一个能帮助更多人的空间。</span><br><span class="line">          img.inline-img(src=&#x27;/img/404.jpg&#x27; data-fancybox=&#x27;gallery&#x27;, style=&#x27;display: inline;margin: 0 3px;height: 1.1em;vertical-align: text-bottom;&#x27;)</span><br><span class="line">          br</span><br><span class="line">          | 从很早开始，我就对分享感兴趣。我喜欢研究数码产品和软件，探索互联网世界如何被创造和发展。在这里，我将分享</span><br><span class="line">          strong 我在学习、生活中获得的点滴知识和感悟。</span><br><span class="line">          | </span><br><span class="line">          img.inline-img(src=&#x27;/img/404.jpg&#x27; data-fancybox=&#x27;gallery&#x27;, style=&#x27;display: inline;margin: 0 3px;height: 1.1em;vertical-align: text-bottom;&#x27;)</span><br><span class="line">          br</span><br><span class="line">          h3 为什么创建这个网站？</span><br><span class="line">          | 作为一个非科班的学生，一直觉得</span><br><span class="line">          del 拥有自己的独立网站是一件十分酷的事情</span><br><span class="line">          psw (觉得用来装逼十分合适)</span><br><span class="line">          | ！这样就相当于拥有自己独立的空间，不用去CSDN这些网站上写博客或者用有道云笔记去记笔记。网站成为了自己的一个名片，</span><br><span class="line">          strong 在上面写写东西，记录生活，分享知识，把自己想与他人展现的技能放在博客上，</span><br><span class="line">          | 何尝不是一件有趣的事情！</span><br><span class="line">          img.inline-img(src=&#x27;/img/404.jpg&#x27; data-fancybox=&#x27;gallery&#x27;, style=&#x27;display: inline;margin: 0 3px;height: 1.1em;vertical-align: text-bottom;&#x27;)</span><br><span class="line">          br</span><br><span class="line">          | 我希望在这个平台上分享自己积累的知识和兴趣，与更多的人产生连接。互联网让我学到了很多，也开阔了视野，我希望能通过这个平台，</span><br><span class="line">          strong 分享一些我生活中琐碎但有趣的东西。</span><br><span class="line">          | 与大多数垂直类的技术博客不同，这里的内容非常多样化——有</span><br><span class="line">          strong 实用的技能教程和干货</span><br><span class="line">          | ，也有</span><br><span class="line">          strong 生活中的吐槽和小妙招</span><br><span class="line">          | ，还有</span><br><span class="line">          strong 我对各种话题的思考和看法。</span><br><span class="line">          img.inline-img(src=&#x27;/img/404.jpg&#x27; data-fancybox=&#x27;gallery&#x27;, style=&#x27;display: inline;margin: 0 3px;height: 1.1em;vertical-align: text-bottom;&#x27;)</span><br><span class="line">          br</span><br><span class="line">          | 当我研究到一些新鲜的东西，或者发现了有趣的事物，我都会在这里记录和分享。对我来说，</span><br><span class="line">          strong 分享是最好的学习方式，</span><br><span class="line">          | 正如那句话所说：“能够教给别人的知识，才是真正学会的知识。”</span><br><span class="line">          img.inline-img(src=&#x27;/img/404.jpg&#x27; data-fancybox=&#x27;gallery&#x27;, style=&#x27;display: inline;margin: 0 3px;height: 1.1em;vertical-align: text-bottom;&#x27;)</span><br><span class="line"></span><br><span class="line">          h3 关于我</span><br><span class="line">          | 目前就读于</span><br><span class="line">          strong 郑州大学</span><br><span class="line">          | 的</span><br><span class="line">          strong 工程力学专业</span><br><span class="line">          | 。虽然作为一个非科班的学生，</span><br><span class="line">          del 但我也是一个编程开发的爱好者。</span><br><span class="line">          img.inline-img(src=&#x27;/img/404.jpg&#x27; data-fancybox=&#x27;gallery&#x27;, style=&#x27;display: inline;margin: 0 3px;height: 1.1em;vertical-align: text-bottom;&#x27;)</span><br><span class="line">          .checkbox.blue.checked</span><br><span class="line">            input(type=&#x27;checkbox&#x27;, checked)</span><br><span class="line">            p 在读废物摆烂大学生</span><br><span class="line">          .checkbox.blue.checked</span><br><span class="line">            input(type=&#x27;checkbox&#x27;, checked)</span><br><span class="line">            p 致力于成为一个编程开发小佬</span><br><span class="line">          .checkbox.times.red.checked</span><br><span class="line">            input(type=&#x27;checkbox&#x27;, checked)</span><br><span class="line">            p 又菜又爱玩</span><br><span class="line">            kbd ctrl</span><br><span class="line">            |  +</span><br><span class="line">            kbd C</span><br><span class="line">            | 、</span><br><span class="line">            kbd ctrl</span><br><span class="line">            |  +</span><br><span class="line">            kbd V</span><br><span class="line">            | 高级CV工程师</span><br><span class="line">          .checkbox.times.red.checked</span><br><span class="line">            input(type=&#x27;checkbox&#x27;, checked)</span><br><span class="line">            p 熟悉Html、CSS、JavaScript、Vue、React、PHP、Java、Python、C、C++、C#、Go、TypeScript等单词的拼写</span><br><span class="line">          .checkbox.times.red.checked</span><br><span class="line">            input(type=&#x27;checkbox&#x27;, checked)</span><br><span class="line">            p 熟练Windows、Linux、Mac、Android、IOS等系统的开关机</span><br><span class="line">          .checkbox.times.red.checked</span><br><span class="line">            input(type=&#x27;checkbox&#x27;, checked)</span><br><span class="line">            p 精通Baidu编程，Google编程，面向ChatGPT编程</span><br><span class="line"></span><br><span class="line">          h3 To DO List</span><br><span class="line">          .checkbox</span><br><span class="line">            input(type=&#x27;checkbox&#x27;)</span><br><span class="line">            p 考研</span><br><span class="line">          .checkbox.checked</span><br><span class="line">            input(type=&#x27;checkbox&#x27;)</span><br><span class="line">            p 考研</span><br><span class="line">          .checkbox.checked</span><br><span class="line">            input(type=&#x27;checkbox&#x27;)</span><br><span class="line">            p 还是TMD考研</span><br><span class="line"></span><br><span class="line">          h3 关于本站</span><br><span class="line">          | 创建这个站的时候，我想要的就是有一个能够</span><br><span class="line">          strong 积累知识，积累兴趣</span><br><span class="line">          | 的地方，和他人分享，这样可以让知识成为真正的</span><br><span class="line">          strong 积累和沉淀。</span><br><span class="line">          | 如果能够帮助到更多的人，解决更多问题，那一定是非常棒的事情。</span><br><span class="line">          img.inline-img(src=&#x27;/img/404.jpg&#x27; data-fancybox=&#x27;gallery&#x27;, style=&#x27;display: inline;margin: 0 3px;height: 1.1em;vertical-align: text-bottom;&#x27;)</span><br><span class="line">          br</span><br><span class="line">          | 这里大多是</span><br><span class="line">          strong 技术向</span><br><span class="line">          | 的文章，可能不会有很多人看，就当是自我记录吧。一般我研究什么、发现了什么都会分享在这里。当然，如果某篇文章能够帮助到你，我也会感到很开心。</span><br><span class="line">          img.inline-img(src=&#x27;/img/404.jpg&#x27; data-fancybox=&#x27;gallery&#x27;, style=&#x27;display: inline;margin: 0 3px;height: 1.1em;vertical-align: text-bottom;&#x27;)</span><br><span class="line">          br</span><br><span class="line">          | 这些就是创建这个小站的本意，也是我</span><br><span class="line">          strong 分享生活的方式。</span><br><span class="line">          | 有幸能和你相遇在这里，相信我们能共同留下</span><br><span class="line">          strong 一段美好的记忆。</span><br><span class="line">          img.inline-img(src=&#x27;/img/404.jpg&#x27; data-fancybox=&#x27;gallery&#x27;, style=&#x27;display: inline;margin: 0 3px;height: 1.1em;vertical-align: text-bottom;&#x27;)</span><br><span class="line"></span><br><span class="line">      - let rawData = item.reward_list</span><br><span class="line">      if rawData</span><br><span class="line">        - let sortedByDate = rawData.slice().sort((a, b) =&gt; new Date(b.datatime) - new Date(a.datatime));</span><br><span class="line">        .author-content</span><br><span class="line">          .author-content-item.single.reward#about-reward</span><br><span class="line">            .author-content-item-tips 致谢</span><br><span class="line">            span.author-content-item-title 赞赏名单</span><br><span class="line">            .author-content-item-description 感谢因为有你们，让我感受到写博客这件事情能够给你们创造了价值，让我更加有创作的动力，让我在这条路上走得更远。</span><br><span class="line">              .reward-list-all</span><br><span class="line">                - let reward_list_amount = item.reward_list.sort((a,b)=&gt;b.amount -  a.amount)</span><br><span class="line">                each item, index in reward_list_amount</span><br><span class="line">                  .reward-list-item</span><br><span class="line">                    .reward-list-item-name=item.name</span><br><span class="line">                    .reward-list-bottom-group</span><br><span class="line">                      if item.amount &gt;= 50</span><br><span class="line">                        .reward-list-item-money(style=&#x27;background:var(--anzhiyu-yellow)&#x27;)=`¥$&#123;item.amount&#125;`</span><br><span class="line">                      else </span><br><span class="line">                        .reward-list-item-money=`¥$&#123;item.amount + (item.suffix ? item.suffix : &quot;&quot;)&#125;`</span><br><span class="line">                      .datatime.reward-list-item-time(datatime=item.datatime)=new Date(item.datatime).toISOString().slice(0, -14)</span><br><span class="line">              .reward-list-updateDate</span><br><span class="line">                | 最新更新时间： </span><br><span class="line">                time.datatime.reward-list-updateDate-time(datatime=sortedByDate[0].datatime)=new Date(sortedByDate[0].datatime).toISOString().slice(0, -14)</span><br><span class="line">                | &amp;nbsp;&amp;nbsp;&amp;nbsp;这些将全部用于博客的服务器、域名及云服务开销</span><br><span class="line">            .about-reward</span><br><span class="line">              #con</span><br><span class="line">              #TA-con(onclick=&quot;anzhiyu.rewardShowConsole()&quot;)</span><br><span class="line">                #text-con</span><br><span class="line">                  #linght</span><br><span class="line">                  #TA 为TA充电</span><br><span class="line">              #tube-con</span><br><span class="line">                svg(viewBox=&#x27;0 0 1028 385&#x27;, fill=&#x27;none&#x27;, xmlns=&#x27;http://www.w3.org/2000/svg&#x27;)</span><br><span class="line">                  path(d=&#x27;M1 77H234.226L307.006 24H790&#x27;, stroke=&#x27;#e5e9ef&#x27;, stroke-width=&#x27;20&#x27;)</span><br><span class="line">                  path(d=&#x27;M0 140H233.035L329.72 71H1028&#x27;, stroke=&#x27;#e5e9ef&#x27;, stroke-width=&#x27;20&#x27;)</span><br><span class="line">                  path(d=&#x27;M1 255H234.226L307.006 307H790&#x27;, stroke=&#x27;#e5e9ef&#x27;, stroke-width=&#x27;20&#x27;)</span><br><span class="line">                  path(d=&#x27;M0 305H233.035L329.72 375H1028&#x27;, stroke=&#x27;#e5e9ef&#x27;, stroke-width=&#x27;20&#x27;)</span><br><span class="line">                  rect(y=&#x27;186&#x27;, width=&#x27;236&#x27;, height=&#x27;24&#x27;, fill=&#x27;#e5e9ef&#x27;)</span><br><span class="line">                  ellipse(cx=&#x27;790&#x27;, cy=&#x27;25.5&#x27;, rx=&#x27;25&#x27;, ry=&#x27;25.5&#x27;, fill=&#x27;#e5e9ef&#x27;)</span><br><span class="line">                  circle(r=&#x27;14&#x27;, transform=&#x27;matrix(1 0 0 -1 790 25)&#x27;, fill=&#x27;white&#x27;)</span><br><span class="line">                  ellipse(cx=&#x27;790&#x27;, cy=&#x27;307.5&#x27;, rx=&#x27;25&#x27;, ry=&#x27;25.5&#x27;, fill=&#x27;#e5e9ef&#x27;)</span><br><span class="line">                  circle(r=&#x27;14&#x27;, transform=&#x27;matrix(1 0 0 -1 790 308)&#x27;, fill=&#x27;white&#x27;)</span><br><span class="line">                #mask</span><br><span class="line">                  svg(viewBox=&#x27;0 0 1028 385&#x27;, fill=&#x27;none&#x27;, xmlns=&#x27;http://www.w3.org/2000/svg&#x27;)</span><br><span class="line">                    path(d=&#x27;M1 77H234.226L307.006 24H790&#x27;, stroke=&#x27;#f25d8e&#x27;, stroke-width=&#x27;20&#x27;)</span><br><span class="line">                    path(d=&#x27;M0 140H233.035L329.72 71H1028&#x27;, stroke=&#x27;#f25d8e&#x27;, stroke-width=&#x27;20&#x27;)</span><br><span class="line">                    path(d=&#x27;M1 255H234.226L307.006 307H790&#x27;, stroke=&#x27;#f25d8e&#x27;, stroke-width=&#x27;20&#x27;)</span><br><span class="line">                    path(d=&#x27;M0 305H233.035L329.72 375H1028&#x27;, stroke=&#x27;#f25d8e&#x27;, stroke-width=&#x27;20&#x27;)</span><br><span class="line">                    rect(y=&#x27;186&#x27;, width=&#x27;236&#x27;, height=&#x27;24&#x27;, fill=&#x27;#f25d8e&#x27;)</span><br><span class="line">                    ellipse(cx=&#x27;790&#x27;, cy=&#x27;25.5&#x27;, rx=&#x27;25&#x27;, ry=&#x27;25.5&#x27;, fill=&#x27;#f25d8e&#x27;)</span><br><span class="line">                    circle(r=&#x27;14&#x27;, transform=&#x27;matrix(1 0 0 -1 790 25)&#x27;, fill=&#x27;white&#x27;)</span><br><span class="line">                    ellipse(cx=&#x27;790&#x27;, cy=&#x27;307.5&#x27;, rx=&#x27;25&#x27;, ry=&#x27;25.5&#x27;, fill=&#x27;#f25d8e&#x27;)</span><br><span class="line">                    circle(r=&#x27;14&#x27;, transform=&#x27;matrix(1 0 0 -1 790 308)&#x27;, fill=&#x27;white&#x27;)</span><br><span class="line">                #orange-mask</span><br><span class="line">                  svg(viewBox=&#x27;0 0 1028 385&#x27;, fill=&#x27;none&#x27;, xmlns=&#x27;http://www.w3.org/2000/svg&#x27;)</span><br><span class="line">                    path(d=&#x27;M1 77H234.226L307.006 24H790&#x27;, stroke=&#x27;#ffd52b&#x27;, stroke-width=&#x27;20&#x27;)</span><br><span class="line">                    path(d=&#x27;M0 140H233.035L329.72 71H1028&#x27;, stroke=&#x27;#ffd52b&#x27;, stroke-width=&#x27;20&#x27;)</span><br><span class="line">                    path(d=&#x27;M1 255H234.226L307.006 307H790&#x27;, stroke=&#x27;#ffd52b&#x27;, stroke-width=&#x27;20&#x27;)</span><br><span class="line">                    path(d=&#x27;M0 305H233.035L329.72 375H1028&#x27;, stroke=&#x27;#ffd52b&#x27;, stroke-width=&#x27;20&#x27;)</span><br><span class="line">                    rect(y=&#x27;186&#x27;, width=&#x27;236&#x27;, height=&#x27;24&#x27;, fill=&#x27;#ffd52b&#x27;)</span><br><span class="line">                    ellipse(cx=&#x27;790&#x27;, cy=&#x27;25.5&#x27;, rx=&#x27;25&#x27;, ry=&#x27;25.5&#x27;, fill=&#x27;#ffd52b&#x27;)</span><br><span class="line">                    circle(r=&#x27;14&#x27;, transform=&#x27;matrix(1 0 0 -1 790 25)&#x27;, fill=&#x27;white&#x27;)</span><br><span class="line">                    ellipse(cx=&#x27;790&#x27;, cy=&#x27;307.5&#x27;, rx=&#x27;25&#x27;, ry=&#x27;25.5&#x27;, fill=&#x27;#ffd52b&#x27;)</span><br><span class="line">                    circle(r=&#x27;14&#x27;, transform=&#x27;matrix(1 0 0 -1 790 308)&#x27;, fill=&#x27;white&#x27;)</span><br><span class="line">                p#people</span><br><span class="line">                  | 共</span><br><span class="line">                  b=item.reward_list.length</span><br><span class="line">                  | 人</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    script(src=url_for(theme.asset.countup_js))</span><br><span class="line">    - const ck = theme.LA.ck</span><br><span class="line">    //- Umami 统计 和 51LA 统计</span><br><span class="line">    if theme.Umami &amp;&amp; theme.Umami.enable</span><br><span class="line">      script(defer).</span><br><span class="line">        (function() &#123;</span><br><span class="line">          const umamiApiUrl = &quot;#&#123;url_for(theme.Umami.umami_api)&#125;&quot;;</span><br><span class="line">          fetch(umamiApiUrl)</span><br><span class="line">            .then(res =&gt; res.json())</span><br><span class="line">            .then(data =&gt; &#123;</span><br><span class="line">              let title = &#123;</span><br><span class="line">                &quot;today_uv&quot;: &quot;今日人数&quot;,</span><br><span class="line">                &quot;today_pv&quot;: &quot;今日访问&quot;,</span><br><span class="line">                &quot;yesterday_uv&quot;: &quot;昨日人数&quot;,</span><br><span class="line">                &quot;yesterday_pv&quot;: &quot;昨日访问&quot;,</span><br><span class="line">                &quot;last_month_pv&quot;: &quot;本月访问&quot;,</span><br><span class="line">                &quot;last_year_pv&quot;: &quot;本年访问&quot;</span><br><span class="line">              &#125;;</span><br><span class="line">              let s = document.getElementById(&quot;statistic&quot;);</span><br><span class="line">              for (let key in data) &#123;</span><br><span class="line">                if (data.hasOwnProperty(key) &amp;&amp; title[key]) &#123;</span><br><span class="line">                  s.innerHTML += `&lt;div&gt;&lt;span&gt;$&#123;title[key]&#125;&lt;/span&gt;&lt;span id=&quot;$&#123;key&#125;&quot;&gt;$&#123;data[key]&#125;&lt;/span&gt;&lt;/div&gt;`;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">              initCountUp(data, title);</span><br><span class="line">            &#125;)</span><br><span class="line">            .catch(error =&gt; console.error(&#x27;Error:&#x27;, error));</span><br><span class="line">        &#125;)();</span><br><span class="line">    else</span><br><span class="line">      script(defer).</span><br><span class="line">        function initAboutPage() &#123;</span><br><span class="line">          fetch(&quot;https://v6-widget.51.la/v6/#&#123;ck&#125;/quote.js&quot;)</span><br><span class="line">            .then(res =&gt; res.text())</span><br><span class="line">            .then(data =&gt; &#123;</span><br><span class="line">              let title = [&quot;最近活跃&quot;, &quot;今日人数&quot;, &quot;今日访问&quot;, &quot;昨日人数&quot;, &quot;昨日访问&quot;, &quot;本月访问&quot;, &quot;总访问量&quot;];</span><br><span class="line">              let num = data.match(/(&lt;\/span&gt;&lt;span&gt;).*?(\/span&gt;&lt;\/p&gt;)/g);</span><br><span class="line"></span><br><span class="line">              num = num.map(el =&gt; &#123;</span><br><span class="line">                let val = el.replace(/(&lt;\/span&gt;&lt;span&gt;)/g, &quot;&quot;);</span><br><span class="line">                let str = val.replace(/(&lt;\/span&gt;&lt;\/p&gt;)/g, &quot;&quot;);</span><br><span class="line">                return str;</span><br><span class="line">              &#125;);</span><br><span class="line"></span><br><span class="line">              let statisticEl = document.getElementById(&quot;statistic&quot;);</span><br><span class="line"></span><br><span class="line">              // 自定义不显示哪个或者显示哪个，如下为不显示 最近活跃访客 和 总访问量</span><br><span class="line">              let statistic = [];</span><br><span class="line">              for (let i = 0; i &lt; num.length; i++) &#123;</span><br><span class="line">                if (!statisticEl) return;</span><br><span class="line">                if (i == 0) continue;</span><br><span class="line">                statisticEl.innerHTML +=</span><br><span class="line">                  &quot;&lt;div&gt;&lt;span&gt;&quot; + title[i] + &quot;&lt;/span&gt;&lt;span id=&quot; + title[i] + &quot;&gt;&quot; + num[i] + &quot;&lt;/span&gt;&lt;/div&gt;&quot;;</span><br><span class="line">                queueMicrotask(() =&gt; &#123;</span><br><span class="line">                  statistic.push(</span><br><span class="line">                    new CountUp(title[i], 0, num[i], 0, 2, &#123;</span><br><span class="line">                      useEasing: true,</span><br><span class="line">                      useGrouping: true,</span><br><span class="line">                      separator: &quot;,&quot;,</span><br><span class="line">                      decimal: &quot;.&quot;,</span><br><span class="line">                      prefix: &quot;&quot;,</span><br><span class="line">                      suffix: &quot;&quot;,</span><br><span class="line">                    &#125;)</span><br><span class="line">                  );</span><br><span class="line">                &#125;);</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              let statisticElement = document.querySelector(&quot;.about-statistic.author-content-item&quot;);</span><br><span class="line">              function statisticUP() &#123;</span><br><span class="line">                if (!statisticElement) return;</span><br><span class="line"></span><br><span class="line">                const callback = (entries, observer) =&gt; &#123;</span><br><span class="line">                  entries.forEach(entry =&gt; &#123;</span><br><span class="line">                    if (entry.isIntersecting) &#123;</span><br><span class="line">                      for (let i = 0; i &lt; num.length; i++) &#123;</span><br><span class="line">                        if (i == 0) continue;</span><br><span class="line">                        queueMicrotask(() =&gt; &#123;</span><br><span class="line">                          statistic[i - 1].start();</span><br><span class="line">                        &#125;);</span><br><span class="line">                      &#125;</span><br><span class="line">                      observer.disconnect(); // 停止观察元素，因为不再需要触发此回调</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;);</span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line">                const options = &#123;</span><br><span class="line">                  root: null,</span><br><span class="line">                  rootMargin: &quot;0px&quot;,</span><br><span class="line">                  threshold: 0</span><br><span class="line">                &#125;;</span><br><span class="line">                const observer = new IntersectionObserver(callback, options);</span><br><span class="line">                observer.observe(statisticElement);</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              statisticUP();</span><br><span class="line">              initCountUp(&#123;&#125;, &#123;&#125;);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">          initAnimation();</span><br><span class="line">        &#125;</span><br><span class="line">        if (typeof gsap === &quot;object&quot;) &#123;</span><br><span class="line">          initAboutPage()</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          getScript(&quot;!&#123;url_for(theme.asset.gsap_js)&#125;&quot;).then(initAboutPage);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    //- 初始化 countup.js</span><br><span class="line">    script(defer).</span><br><span class="line">      function initCountUp(data, title) &#123;</span><br><span class="line">        const elements = [];</span><br><span class="line"></span><br><span class="line">        for (let key in data) &#123;</span><br><span class="line">          if (data.hasOwnProperty(key) &amp;&amp; title[key]) &#123;</span><br><span class="line">            const element = document.getElementById(key);</span><br><span class="line">            if (element) &#123;</span><br><span class="line">              elements.push(&#123; id: key, value: data[key], element: element &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        const selfInfoContentYearElement = document.getElementById(&quot;selfInfo-content-year&quot;);</span><br><span class="line">        if (selfInfoContentYearElement) &#123;</span><br><span class="line">          elements.push(&#123; id: &quot;selfInfo-content-year&quot;, value: #&#123;selfInfoContentYear&#125;, element: selfInfoContentYearElement &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        const observer = new IntersectionObserver((entries) =&gt; &#123;</span><br><span class="line">          entries.forEach(entry =&gt; &#123;</span><br><span class="line">            if (entry.isIntersecting) &#123;</span><br><span class="line">              const target = elements.find(el =&gt; el.element === entry.target);</span><br><span class="line">              if (target) &#123;</span><br><span class="line">                const countUp = new CountUp(target.id, 0, target.value, 0, 2, &#123;</span><br><span class="line">                  useEasing: true,</span><br><span class="line">                  useGrouping: target.id === &quot;selfInfo-content-year&quot; ? false : true,</span><br><span class="line">                  separator: &quot;,&quot;,</span><br><span class="line">                  decimal: &quot;.&quot;,</span><br><span class="line">                  prefix: &quot;&quot;,</span><br><span class="line">                  suffix: &quot;&quot;,</span><br><span class="line">                &#125;);</span><br><span class="line">                countUp.start();</span><br><span class="line">                observer.unobserve(entry.target);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;, &#123; threshold: 0 &#125;);</span><br><span class="line"></span><br><span class="line">        elements.forEach(el =&gt; observer.observe(el.element));</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    //- 独立鼠标跟随动画</span><br><span class="line">    script(defer).</span><br><span class="line">      function initAnimation() &#123;</span><br><span class="line">        var pursuitInterval = null;</span><br><span class="line">        pursuitInterval = setInterval(function () &#123;</span><br><span class="line">          const show = document.querySelector(&quot;span[data-show]&quot;);</span><br><span class="line">          const next = show.nextElementSibling || document.querySelector(&quot;.first-tips&quot;);</span><br><span class="line">          const up = document.querySelector(&quot;span[data-up]&quot;);</span><br><span class="line"></span><br><span class="line">          if (up) &#123;</span><br><span class="line">            up.removeAttribute(&quot;data-up&quot;);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          show.removeAttribute(&quot;data-show&quot;);</span><br><span class="line">          show.setAttribute(&quot;data-up&quot;, &quot;&quot;);</span><br><span class="line"></span><br><span class="line">          next.setAttribute(&quot;data-show&quot;, &quot;&quot;);</span><br><span class="line">        &#125;, 2000);</span><br><span class="line"></span><br><span class="line">        document.addEventListener(&quot;pjax:send&quot;, function () &#123;</span><br><span class="line">          pursuitInterval &amp;&amp; clearInterval(pursuitInterval);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        var helloAboutEl = document.querySelector(&quot;.hello-about&quot;);</span><br><span class="line">        helloAboutEl.addEventListener(&quot;mousemove&quot;, evt =&gt; &#123;</span><br><span class="line">          const mouseX = evt.offsetX;</span><br><span class="line">          const mouseY = evt.offsetY;</span><br><span class="line">          gsap.set(&quot;.cursor&quot;, &#123;</span><br><span class="line">            x: mouseX,</span><br><span class="line">            y: mouseY,</span><br><span class="line">          &#125;);</span><br><span class="line"></span><br><span class="line">          gsap.to(&quot;.shape&quot;, &#123;</span><br><span class="line">            x: mouseX,</span><br><span class="line">            y: mouseY,</span><br><span class="line">            stagger: -0.1,</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      if (typeof gsap === &quot;object&quot;) &#123;</span><br><span class="line">        initAnimation()</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        getScript(&quot;!&#123;url_for(theme.asset.gsap_js)&#125;&quot;).then(initAnimation);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><hr><h3 id="5-编辑-main-js"><a href="#5-编辑-main-js" class="headerlink" title="5.编辑 main.js"></a>5.编辑 <code>main.js</code></h3><p>在 <strong><code>themes/anzhiyu/source/js/main.js</code></strong> 中</p><p>最下面<strong>1803行</strong>，添加以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 欢迎信息</span></span><br><span class="line">elykia.<span class="title function_">setWelcome_info</span>();</span><br></pre></td></tr></table></figure><hr><h3 id="6-修改-sw-rules-js"><a href="#6-修改-sw-rules-js" class="headerlink" title="6. 修改 sw-rules.js"></a>6. 修改 <code>sw-rules.js</code></h3><p>在 <strong><code>themes/anzhiyu/sw-rules.js</code></strong> 中</p><p>修改为**<code>swpp.config.js</code>**并放到博客根目录下</p><p>修改过多，故直接贴出：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;swpp-backends&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">    <span class="attr">compilationEnv</span>: &#123;</span><br><span class="line">        <span class="comment">// 此项是必须配置的项目，swpp 必须知道您的域名才能区分哪些资源是外部资源。</span></span><br><span class="line">        <span class="comment">// 部分前端实现可能会帮您自动填写该项目，具体是否必须手动填写请见前端实现的文档。</span></span><br><span class="line">        <span class="attr">DOMAIN_HOST</span>: <span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;https://blog.elykia.cn/&#x27;</span>),</span><br><span class="line">        <span class="attr">SERVICE_WORKER</span>:<span class="string">&quot;SW&quot;</span>,</span><br><span class="line">        <span class="attr">NETWORK_FILE_FETCHER</span>:&#123;</span><br><span class="line">        <span class="attr">referer</span>:<span class="string">&quot;https://blog.elykia.cn/&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> https://kmar.top/posts/b70ec88f/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.<span class="property">config</span> = &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 与 ServiceWorker 有关的配置项</span></span><br><span class="line"><span class="comment">   * 若想禁止插件自动生成 sw，此项填 false 即可</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@type</span> ?Object|boolean</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="comment">/** <span class="doctag">@type</span> &#123;<span class="type">?ServiceWorkerConfig|boolean</span>&#125; */</span></span><br><span class="line">  <span class="attr">serviceWorker</span>: &#123;</span><br><span class="line">    <span class="attr">cacheName</span>: <span class="string">&#x27;AnZhiYuThemeCache&#x27;</span>,</span><br><span class="line">    <span class="attr">escape</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">debug</span>: <span class="literal">false</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">register</span>: &#123;</span><br><span class="line">    <span class="attr">onsuccess</span>: <span class="literal">undefined</span>,</span><br><span class="line">    <span class="attr">onerror</span>: <span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Service Worker 注册失败！可能是由于您的浏览器不支持该功能！&#x27;</span>),</span><br><span class="line">    <span class="attr">builder</span>: <span class="function">(<span class="params">root, framework, pluginConfig</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; onerror, onsuccess &#125; = pluginConfig.<span class="property">register</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;script&gt;</span></span><br><span class="line"><span class="string">          (() =&gt; &#123;</span></span><br><span class="line"><span class="string">            const sw = navigator.serviceWorker;</span></span><br><span class="line"><span class="string">            const error = <span class="subst">$&#123;onerror &amp;&amp; onerror.toString()&#125;</span>;</span></span><br><span class="line"><span class="string">            if (!sw?.register(&#x27;<span class="subst">$&#123;<span class="keyword">new</span> URL(root).pathname&#125;</span>sw.js&#x27;)</span></span><br><span class="line"><span class="string">              <span class="subst">$&#123;onsuccess ? <span class="string">`?.then(<span class="subst">$&#123;onsuccess.toString()&#125;</span>)`</span> : <span class="string">&quot;&quot;</span>&#125;</span></span></span><br><span class="line"><span class="string">              ?.catch(error)</span></span><br><span class="line"><span class="string">            ) error()</span></span><br><span class="line"><span class="string">          &#125;)()</span></span><br><span class="line"><span class="string">        &lt;/script&gt;`</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/** <span class="doctag">@type</span> &#123;<span class="type">?DomConfig|boolean</span>&#125; */</span></span><br><span class="line">  <span class="attr">dom</span>: &#123;</span><br><span class="line">    <span class="comment">/** <span class="doctag">@type</span> &#123;<span class="type">?VoidFunction</span>&#125; */</span></span><br><span class="line">    <span class="attr">onsuccess</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      caches.<span class="title function_">match</span>(<span class="string">&#x27;https://id.v3/&#x27;</span>).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (response) &#123;</span><br><span class="line">          <span class="comment">// 如果找到了匹配的缓存响应</span></span><br><span class="line">          response.<span class="title function_">json</span>().<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">            anzhiyuPopupManager &amp;&amp; anzhiyuPopupManager.<span class="title function_">enqueuePopup</span>(<span class="string">&#x27;通知📢&#x27;</span>, <span class="string">`已刷新缓存，更新为<span class="subst">$&#123;data.<span class="variable language_">global</span> + <span class="string">&quot;.&quot;</span> + data.local&#125;</span>版本最新内容`</span>, <span class="literal">null</span>, <span class="number">5000</span>);</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&#x27;未找到匹配的缓存响应&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;).<span class="title function_">catch</span>(<span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;缓存匹配出错:&#x27;</span>, error);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/** <span class="doctag">@type</span> &#123;<span class="type">?VersionJsonConfig|boolean</span>&#125; */</span></span><br><span class="line">  <span class="attr">json</span>: &#123;</span><br><span class="line">    <span class="attr">maxHtml</span>: <span class="number">15</span>,</span><br><span class="line">    <span class="attr">charLimit</span>: <span class="number">1024</span>,</span><br><span class="line">    <span class="attr">merge</span>: [<span class="string">&#x27;page&#x27;</span>, <span class="string">&#x27;archives&#x27;</span>, <span class="string">&#x27;categories&#x27;</span>, <span class="string">&#x27;tags&#x27;</span>],</span><br><span class="line">    <span class="attr">exclude</span>: &#123;</span><br><span class="line">      <span class="attr">localhost</span>: [],</span><br><span class="line">      <span class="attr">other</span>: [],</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/** <span class="doctag">@type</span> &#123;<span class="type">?ExternalMonitorConfig|boolean</span>&#125; */</span></span><br><span class="line">  <span class="attr">external</span>: &#123;</span><br><span class="line">    <span class="attr">timeout</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="attr">concurrencyLimit</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">stable</span>: [</span><br><span class="line">      <span class="regexp">/^https:\/\/npm\.elemecdn\.com\/[^/@]+\@[^/@]+\/[^/]+\/[^/]+$/</span>,</span><br><span class="line">      <span class="regexp">/^https:\/\/registry\.npmmirror\.com\/[^/]+\/[^/]+\/files\/[^/]+$/</span>,</span><br><span class="line">      <span class="regexp">/^https:\/\/npm\.onmicrosoft\.cn\/[^/@]+\@[^/@]+\/[^/]+\/[^/]+$/</span>,</span><br><span class="line">      <span class="regexp">/^https:\/\/cdn\.cbd\.int\/[^/@]+\@[^/@]+\/[^/]+\/[^/]+$/</span>,</span><br><span class="line">      <span class="regexp">/^https:\/\/cdn\.jsdelivr\.net\/npm\/[^/@]+\@[^/@]+\/[^/]+\/[^/]+$/</span>,</span><br><span class="line">      <span class="regexp">/^https:\/\/fastly\.jsdelivr\.net\/npm\/[^/@]+\@[^/@]+\/[^/]+\/[^/]+$/</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">replacer</span>: <span class="function">(<span class="params">srcUrl</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> pathname = <span class="keyword">new</span> <span class="title function_">URL</span>(srcUrl).<span class="property">pathname</span>;</span><br><span class="line">      <span class="keyword">return</span> srcUrl.<span class="title function_">startsWith</span>(<span class="string">&#x27;https://npm.elemecdn.com&#x27;</span>) </span><br><span class="line">        ? [</span><br><span class="line">            srcUrl,</span><br><span class="line">            <span class="string">`https://npm.onmicrosoft.cn`</span> + url.<span class="property">pathname</span>,</span><br><span class="line">            <span class="string">`https://cdn.cbd.int`</span> + url.<span class="property">pathname</span>,</span><br><span class="line">            <span class="string">`https://cdn.jsdelivr.net/npm`</span> + url.<span class="property">pathname</span>,</span><br><span class="line">            <span class="string">`https://unpkg.com`</span> + url.<span class="property">pathname</span>,</span><br><span class="line">            <span class="string">`https://registry.npmmirror.com`</span> + url.<span class="property">pathname</span>,</span><br><span class="line">            <span class="string">`https://fastly.jsdelivr.net/npm`</span> + url.<span class="property">pathname</span>,</span><br><span class="line">          ]</span><br><span class="line">        : srcUrl;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 跳过处理番剧封面 */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.<span class="property">skipRequest</span> = <span class="function"><span class="params">request</span> =&gt;</span> request.<span class="property">url</span>.<span class="title function_">startsWith</span>(<span class="string">&#x27;https://i0.hdslb.com&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 缓存列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> clean 清理全站时是否删除其缓存</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> match &#123;function(URL)&#125; 匹配规则</span></span><br><span class="line"><span class="comment"> * 更多：/\/|\.(js|html|css|woff2|woff|ttf|cur)$/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.<span class="property">cacheRules</span> = &#123;</span><br><span class="line">  <span class="attr">simple</span>: &#123;</span><br><span class="line">    <span class="attr">clean</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">search</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">match</span>: <span class="function">(<span class="params">url, $eject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> allowedHost = $eject.<span class="property">domain</span>;</span><br><span class="line">      <span class="keyword">return</span> url.<span class="property">host</span> === allowedHost &amp;&amp; url.<span class="property">pathname</span>.<span class="title function_">match</span>(<span class="regexp">/(\.(js|css|json)|\/)$/</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">cdn</span>: &#123;</span><br><span class="line">    <span class="attr">clean</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">match</span>: <span class="function">(<span class="params">url</span>) =&gt;</span></span><br><span class="line">      [</span><br><span class="line">        <span class="string">&quot;cdn.cbd.int&quot;</span>,</span><br><span class="line">        <span class="string">&quot;lf26-cdn-tos.bytecdntp.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;lf6-cdn-tos.bytecdntp.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;lf3-cdn-tos.bytecdntp.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;lf9-cdn-tos.bytecdntp.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;cdn.staticfile.org&quot;</span>,</span><br><span class="line">        <span class="string">&quot;npm.elemecdn.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;npm.onmicrosoft.cn&quot;</span>,</span><br><span class="line">        <span class="string">&quot;fonts.gstatic.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;font.onmicrosoft.cn&quot;</span></span><br><span class="line">      ].<span class="title function_">includes</span>(url.<span class="property">host</span>) &amp;&amp; url.<span class="property">pathname</span>.<span class="title function_">match</span>(<span class="regexp">/\.(js|css|woff2|woff|ttf|cur)$/</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">img</span>: &#123;</span><br><span class="line">    <span class="attr">clean</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">match</span>: <span class="function">(<span class="params">url, $eject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> allowedHost = $eject.<span class="property">domain</span>;</span><br><span class="line">      <span class="keyword">return</span> url.<span class="property">host</span> === allowedHost &amp;&amp; url.<span class="property">pathname</span>.<span class="title function_">match</span>(<span class="regexp">/(.*?)\.(png|jpe?g|svg|webp|gif|bmp|psd|tiff|tga|ico|eps)/</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">thirdparty</span>: &#123;</span><br><span class="line">    <span class="attr">clean</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">match</span>: <span class="function">(<span class="params">url</span>) =&gt;</span> url.<span class="property">host</span> === <span class="string">&#x27;unpkg.com&#x27;</span> &amp;&amp; url.<span class="property">pathname</span>.<span class="title function_">match</span>(<span class="regexp">/\.(png|webp)$/</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取一个 URL 对应的备用 URL 列表，访问顺序按列表顺序，所有 URL 访问时参数一致</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> srcUrl &#123;string&#125; 原始 URL</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">&#123;list: string[], timeout: number</span>&#125;&#125; 返回 null 或不返回表示对该 URL 不启用该功能。timeout 为超时时间（ms），list 为 URL 列表，列表不包含原始 URL 表示去除原始访问</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.<span class="property">getSpareUrls</span> = <span class="function">(<span class="params">srcUrl</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (srcUrl.<span class="title function_">startsWith</span>(<span class="string">&#x27;https://npm.elemecdn.com&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">timeout</span>: <span class="number">3000</span>,</span><br><span class="line">      <span class="attr">list</span>: [</span><br><span class="line">        srcUrl,</span><br><span class="line">        <span class="string">`https://cdn.cbd.int<span class="subst">$&#123;<span class="keyword">new</span> URL(srcUrl).pathname&#125;</span>`</span>,</span><br><span class="line">        <span class="string">`https://fastly.jsdelivr.net/npm<span class="subst">$&#123;<span class="keyword">new</span> URL(srcUrl).pathname&#125;</span>`</span>,</span><br><span class="line">      ],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取要插入到 sw 中的变量或常量</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> hexo hexo 对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> rules 合并后的 sw-rules 对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">Object</span>&#125; 要插入的键值对</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.<span class="property">ejectValues</span> = <span class="function">(<span class="params">hexo, rules</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">domain</span>: &#123;</span><br><span class="line">      <span class="attr">prefix</span>: <span class="string">&quot;const&quot;</span>,</span><br><span class="line">      <span class="attr">value</span>: <span class="keyword">new</span> <span class="title function_">URL</span>(hexo.<span class="property">config</span>.<span class="property">url</span>).<span class="property">host</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> request &#123;Request&#125;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">boolean</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.<span class="property">skipRequest</span> = <span class="function">(<span class="params">request</span>) =&gt;</span> </span><br><span class="line">  request.<span class="property">url</span>.<span class="title function_">startsWith</span>(<span class="string">&#x27;https://i0.hdslb.com&#x27;</span>) ||</span><br><span class="line">  request.<span class="property">url</span>.<span class="title function_">startsWith</span>(<span class="string">&#x27;https://meting.qjqq.cn&#x27;</span>) ||</span><br><span class="line">  request.<span class="property">url</span>.<span class="title function_">startsWith</span>(<span class="string">&#x27;https://api.i-meto.com&#x27;</span>);</span><br></pre></td></tr></table></figure><hr><h3 id="7-修改rightmenu-pug"><a href="#7-修改rightmenu-pug" class="headerlink" title="7. 修改rightmenu.pug"></a>7. 修改<code>rightmenu.pug</code></h3><p>在 <strong><code>themes/anzhiyu/layout/includes/anzhiyu/rightmenu.pug</code></strong> 中</p><p>大致<strong>42 行</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.rightMenu-item#menu-searchBaidu</span><br><span class="line">  i.anzhiyufont.anzhiyu-icon-magnifying-glass</span><br><span class="line">- span 百度搜索</span><br><span class="line">+ span 必应搜索</span><br></pre></td></tr></table></figure><hr><h3 id="8-修改right-click-menu-js"><a href="#8-修改right-click-menu-js" class="headerlink" title="8. 修改right_click_menu.js"></a>8. 修改<code>right_click_menu.js</code></h3><p>在 <strong><code>themes/anzhiyu/source/js/anzhiyu/right_click_menu.js</code></strong> 中</p><p>大致<strong>364 行</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 百度搜索</span></span><br><span class="line">rm.<span class="property">searchBaidu</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">- anzhiyu.<span class="title function_">snackbarShow</span>(<span class="string">&quot;即将跳转到百度搜索&quot;</span>, <span class="literal">false</span>, <span class="number">2000</span>);</span><br><span class="line">+ anzhiyu.<span class="title function_">snackbarShow</span>(<span class="string">&quot;即将跳转到必应搜索&quot;</span>, <span class="literal">false</span>, <span class="number">2000</span>);</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">-   <span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&quot;https://www.baidu.com/s?wd=&quot;</span> + selectTextNow);</span><br><span class="line">+   <span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&quot;https://www.bing.com/search?q=&quot;</span> + selectTextNow);</span><br><span class="line">  &#125;, <span class="string">&quot;2000&quot;</span>);</span><br><span class="line">  rm.<span class="title function_">hideRightMenu</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><h3 id="9-修改img"><a href="#9-修改img" class="headerlink" title="9. 修改img"></a>9. 修改<code>img</code></h3><ul><li>删除 <strong><code>themes/anzhiyu/source/js/anzhiyu/source/favicon.ico</code></strong> </li><li>覆盖 <strong><code>themes/anzhiyu/source/js/anzhiyu/source/img/</code></strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://elykia.lanzoup.com/iJorc2dac4li</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文只是记录，并非教程，请直接不要按照本文修改，以免报错。&lt;br&gt;其实本站并没有做多修改，写此文章仅为记录，方便以后升级更新！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-修改-analytics-pug&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="编程开发" scheme="https://blog.elykia.cn/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="魔改" scheme="https://blog.elykia.cn/tags/%E9%AD%94%E6%94%B9/"/>
    
    <category term="Hexo" scheme="https://blog.elykia.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>关于使用VSCode或Word文本选择光标消失的解决方案</title>
    <link href="https://blog.elykia.cn/posts/15.html"/>
    <id>https://blog.elykia.cn/posts/15.html</id>
    <published>2024-10-06T13:47:40.000Z</published>
    <updated>2024-11-15T15:57:14.349Z</updated>
    
    <content type="html"><![CDATA[<p>最近几天遇到一个很讨厌的问题，就是鼠标在选中文本或点击搜索框或url地址栏时，形如“I”的光标就会变成白色，与背景融为一体，找光标找到崩溃，导致搬砖的效率极低。</p><p>后面就开始通过对鼠标的设置尝试解决此问题，坚持不懈地试了很多次才成功解决！</p><p>解决方法如下：</p><ol><li>首先打开控制面板，打开硬件和声音，找到鼠标，即可进行设置。</li><li>进行以下操作：</li></ol><p><img src="https://bu.dusays.com/2024/08/25/66caee3eaa816.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近几天遇到一个很讨厌的问题，就是鼠标在选中文本或点击搜索框或url地址栏时，形如“I”的光标就会变成白色，与背景融为一体，找光标找到崩溃，导致搬砖的效率极低。&lt;/p&gt;
&lt;p&gt;后面就开始通过对鼠标的设置尝试解决此问题，坚持不懈地试了很多次才成功解决！&lt;/p&gt;
&lt;p&gt;解决方法</summary>
      
    
    
    
    <category term="编程开发" scheme="https://blog.elykia.cn/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="光标" scheme="https://blog.elykia.cn/tags/%E5%85%89%E6%A0%87/"/>
    
    <category term="问题" scheme="https://blog.elykia.cn/tags/%E9%97%AE%E9%A2%98/"/>
    
    <category term="VSCode" scheme="https://blog.elykia.cn/tags/VSCode/"/>
    
    <category term="Windows" scheme="https://blog.elykia.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>解决git clone报错 git fatal Unable to find remote helper for &#39;https&#39;</title>
    <link href="https://blog.elykia.cn/posts/14.html"/>
    <id>https://blog.elykia.cn/posts/14.html</id>
    <published>2024-09-03T14:16:48.000Z</published>
    <updated>2024-11-15T15:52:03.226Z</updated>
    
    <content type="html"><![CDATA[<h2 id="适用设备"><a href="#适用设备" class="headerlink" title="适用设备"></a>适用设备</h2><ul><li>Windows 11</li></ul><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><ul><li><p>相信大家在git clone github中的项目时，一定都与遇到了不少令人头疼的错误。</p></li><li><p>比如这样的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error: RPC failed; curl 56 OpenSSL SSL_read: Connection was reset, errno 10054；</span><br></pre></td></tr></table></figure><p> 亦或者是这样的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fatal: unable to access &#x27;https://github.com/WongKinYiu/yolov7.git/&#x27;: SSL connection timeout</span><br></pre></td></tr></table></figure></li></ul><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ul><li><p>初始化</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></li></ul><h2 id="方法原理"><a href="#方法原理" class="headerlink" title="方法原理"></a>方法原理</h2><ul><li>绝大多数人肯定是下了git就去下东西了，好运的话确实能一次下完，没做这一步就去按别的贴去设置的，喜提“fatal: not in a git directory”</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;适用设备&quot;&gt;&lt;a href=&quot;#适用设备&quot; class=&quot;headerlink&quot; title=&quot;适用设备&quot;&gt;&lt;/a&gt;适用设备&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Windows 11&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; clas</summary>
      
    
    
    
    <category term="编程开发" scheme="https://blog.elykia.cn/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="问题" scheme="https://blog.elykia.cn/tags/%E9%97%AE%E9%A2%98/"/>
    
    <category term="git" scheme="https://blog.elykia.cn/tags/git/"/>
    
    <category term="Windows" scheme="https://blog.elykia.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Windows桌面图标调整布局后重启不保存的解决方案</title>
    <link href="https://blog.elykia.cn/posts/13.html"/>
    <id>https://blog.elykia.cn/posts/13.html</id>
    <published>2024-09-02T06:33:36.000Z</published>
    <updated>2024-11-15T15:51:54.258Z</updated>
    
    <content type="html"><![CDATA[<h2 id="适用设备"><a href="#适用设备" class="headerlink" title="适用设备"></a>适用设备</h2><ul><li>Windows 11</li></ul><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><ul><li>更改桌面图标位置，重新启动后不保存，图标返回原位</li></ul><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ul><li>操作方法：调整桌面图标布局后，右键单击桌面空白处，在右键菜单展开“查看”选项卡，多次转换图标大小，在中等图标和小图标之间切换，重复数次，刷新。重启查看是否生效。</li></ul><h2 id="方法原理"><a href="#方法原理" class="headerlink" title="方法原理"></a>方法原理</h2><ul><li>我也不知道</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;适用设备&quot;&gt;&lt;a href=&quot;#适用设备&quot; class=&quot;headerlink&quot; title=&quot;适用设备&quot;&gt;&lt;/a&gt;适用设备&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Windows 11&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; clas</summary>
      
    
    
    
    <category term="编程开发" scheme="https://blog.elykia.cn/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="问题" scheme="https://blog.elykia.cn/tags/%E9%97%AE%E9%A2%98/"/>
    
    <category term="图标排序" scheme="https://blog.elykia.cn/tags/%E5%9B%BE%E6%A0%87%E6%8E%92%E5%BA%8F/"/>
    
    <category term="Windows" scheme="https://blog.elykia.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>解决服务器内存不足量的问题</title>
    <link href="https://blog.elykia.cn/posts/12.html"/>
    <id>https://blog.elykia.cn/posts/12.html</id>
    <published>2024-08-29T07:22:37.000Z</published>
    <updated>2024-11-15T15:51:45.280Z</updated>
    
    <content type="html"><![CDATA[<h2 id="内存不足"><a href="#内存不足" class="headerlink" title="内存不足"></a>内存不足</h2><p>腾讯云服务器安装 Debian 后使用 <code>free</code> 命令查看内存大小往往会发现比所购买配置的标称内存要小很多，1G 内存的实例通常只有 860M 左右，2G 内存的查出来也只有 1870M 左右。</p><p>如下图所示（2G 内存）：</p><p><img src="https://bu.dusays.com/2024/09/05/66d9c8b028f8f.png"></p><p>一开始我也和大多数人想的一样，认为这是黑心商家为了多赚钱故意少分配了内存，然而最近了解了一下情况之后发现这事还真是误会腾讯云了，下面简单的记录一下问题原因和解决方案吧。</p><h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>使用命令 <code>dmidecode</code> 查看底层硬件信息，可以看到我的 2G 内存的服务器是分配足了 2048M 内存的。</p><p><img src="https://bu.dusays.com/2024/08/29/66cf4d531a2cc.png" alt="使用 dmidecode 命令查看底层硬件信息"></p><p>但是为什么使用 <code>free</code> 命令看到的内存变少了呢？查阅资料找到了答案：<code>free</code> 命令看到的是伙伴系统管理的内存，这部分内存是不包括 OS 内核一些基本数据结构消耗以及内核预留内存的。</p><p>使用命令 <code>dmesg | grep -i memory</code> 查看内核预留内存，注意到如下部分：</p><p><img src="https://bu.dusays.com/2024/08/29/66cf4cd4de9da.png" alt="查看系统中的内核预留内存"></p><p>嗯，为 <code>crashkernel</code> 预留了 128M 的内存，很明显这就是导致我们“内存不足量”的罪魁祸首。</p><p>腾讯云提供的 Debian 和 Ubuntu 系统镜像默认开启了 kdump 服务，当 Linux 内核出现了故障时 kdump 会协助产生一个 dump 文件，记录下此时的内存运行参数等信息，便于用户后续对内核问题的定位分析。而上面提到的“为 <code>crashkernel</code> 预留的内存”就是用于这一服务的，也就是导致我们“内存不足量”的元凶。</p><p>这一服务对于那些注重安全的大公司来说可能会有些用处，但我们这种个人用途的低配置服务器也开着的话就没有什么必要了，本身内存就不大，还要为这服务分出去一部分不能用，想想还是有点浪费的。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>既然问题是由于系统为 kdump 服务预留了一部分内存导致的，那我们把 kdump 服务关了就行了。</p><p>暴力点，直接卸载 kdump-tools：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt purge kdump-tools</span><br></pre></td></tr></table></figure><p>卸载后顺便清理一下它的那些已经用不到了的依赖包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt autoremove</span><br></pre></td></tr></table></figure><p>然后编辑 <code>/etc/default/grub</code> 文件，将其中的 <code>crashkernel=xxx</code> 字段全部删掉，我这里的修改情况如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">待修改的两行配置</span><br><span class="line"></span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;crashkernel=384M-:128M&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;net.ifnames=0 biosdevname=0 console=ttyS0,115200 console=tty0 panic=5 crashkernel=auto&quot;</span><br><span class="line"></span><br><span class="line">修改后的配置</span><br><span class="line"></span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;net.ifnames=0 biosdevname=0 console=ttyS0,115200 console=tty0 panic=5&quot;</span><br></pre></td></tr></table></figure><p>修改完之后执行 <code>update-grub2</code> 更新 grub 引导文件，最后再重启一下服务器就可以啦！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-grub2</span><br></pre></td></tr></table></figure><p>如下图所示，重启后可用内存变成了 2004M（比之前多了 128M）：</p><p><img src="https://bu.dusays.com/2024/08/29/66cf4cd5357d4.png"></p><p><strong>参考资料</strong>:</p><ol><li><a href="https://blog.inkuang.com/2020/524/">解决腾讯云服务器内存不足量的问题</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;内存不足&quot;&gt;&lt;a href=&quot;#内存不足&quot; class=&quot;headerlink&quot; title=&quot;内存不足&quot;&gt;&lt;/a&gt;内存不足&lt;/h2&gt;&lt;p&gt;腾讯云服务器安装 Debian 后使用 &lt;code&gt;free&lt;/code&gt; 命令查看内存大小往往会发现比所购买配置的标称内存</summary>
      
    
    
    
    <category term="编程开发" scheme="https://blog.elykia.cn/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="内存" scheme="https://blog.elykia.cn/tags/%E5%86%85%E5%AD%98/"/>
    
    <category term="问题" scheme="https://blog.elykia.cn/tags/%E9%97%AE%E9%A2%98/"/>
    
    <category term="服务器" scheme="https://blog.elykia.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="Debian" scheme="https://blog.elykia.cn/tags/Debian/"/>
    
  </entry>
  
  <entry>
    <title>Twikoo邮件回复模板</title>
    <link href="https://blog.elykia.cn/posts/11.html"/>
    <id>https://blog.elykia.cn/posts/11.html</id>
    <published>2024-08-28T16:06:42.000Z</published>
    <updated>2025-01-10T14:42:54.133Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Twikoo邮件回复模板-绿野仙踪款"><a href="#Twikoo邮件回复模板-绿野仙踪款" class="headerlink" title="Twikoo邮件回复模板(绿野仙踪款)"></a>Twikoo邮件回复模板(绿野仙踪款)</h2><div class="tabs" id="span"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="span-1">回复通知模版</button><button type="button" class="tab " data-href="span-2">管理员通知模板</button></ul><div class="tab-contents"><div class="tab-item-content active" id="span-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="code">&lt;div id=&quot;isForwardContent&quot;&gt;</span></span><br><span class="line"><span class="code">&lt;div&gt;</span></span><br><span class="line"><span class="code">&lt;div id=&quot;content&quot;&gt;</span></span><br><span class="line"><span class="code">&lt;div style=&quot;background: white;width: 95%;max-width: 800px;margin: auto auto; border-radius: 15px; border: #ff9999 1px solid; overflow: hidden; -webkit-box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.12); box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.18);&quot;&gt;</span></span><br><span class="line"><span class="code">&lt;header style=&quot;overflow: hidden&quot;&gt;</span></span><br><span class="line"><span class="code">&lt;img src=&quot;https://bu.dusays.com/2024/10/28/671fae826679c.jpg&quot; style=&quot;width: 100%; z-index: 666&quot; /&gt;</span></span><br><span class="line"><span class="code">&lt;/header&gt;</span></span><br><span class="line"><span class="code">&lt;div style=&quot;padding: 5px 20px;background-color: white&quot;&gt;</span></span><br><span class="line"><span class="code">&lt;div class=&quot;dear&quot; style=&quot;border-radius: 30px; position: relative; color: white; float: left; z-index: 999; background: #ffb7c5; padding: 10px 30px; margin: -25px auto 0; box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.3);&quot;&gt;亲爱的 $&#123;PARENT_NICK&#125; 同学：&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;br /&gt;</span></span><br><span class="line"><span class="code">&lt;center&gt;</span></span><br><span class="line"><span class="code">&lt;h3&gt;来自 &lt;strong&gt;$&#123;NICK&#125;&lt;/strong&gt; 的回复&lt;/h3&gt;</span></span><br><span class="line"><span class="code">&lt;/center&gt;</span></span><br><span class="line"><span class="code">&lt;hr style=&quot;width:200px;border:0;border-bottom:1px solid #e5e5e5;margin:12px auto;&quot; /&gt;</span></span><br><span class="line"><span class="code">&lt;br /&gt;&lt;p&gt;您好！您在 &lt;a href=&quot;$&#123;POST_URL&#125;&quot; style=&quot;text-decoration: none; color: #ffb7c5&quot; target=&quot;_blank&quot;&gt;&amp;nbsp;$&#123;SITE_NAME&#125;&amp;nbsp;&lt;/a&gt;上发表的评论：&lt;/p&gt;</span></span><br><span class="line"><span class="code">&lt;div class=&quot;tk-content&quot; style=&quot;border-radius: 8px;border: 1px solid #ddd; padding-bottom: 20px; background-color: #f5f5f5; margin: 15px 0px; padding-left: 20px; padding-right: 20px; padding-top: 20px;&quot;&gt;$&#123;PARENT_COMMENT&#125;&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;p&gt;&lt;strong&gt;$&#123;NICK&#125;&lt;/strong&gt; 给您回复啦：&lt;/p&gt;</span></span><br><span class="line"><span class="code">&lt;div class=&quot;tk-content&quot; style=&quot;border-radius: 8px;border: 1px solid #ddd; padding-bottom: 20px; background-color: #f5f5f5; margin: 15px 0px; padding-left: 20px; padding-right: 20px; padding-top: 20px;&quot;&gt;$&#123;COMMENT&#125;&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;p&gt;欢迎再次光临小站： &lt;a style=&quot;text-decoration:none; color:#ffb7c5&quot; href=&quot;$&#123;SITE_URL&#125;&quot; target=&quot;_blank&quot;&gt;$&#123;SITE_NAME&#125;&lt;/a&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="code">&lt;p&gt;(此邮件由Twikoo系统发出，支持直接回复)&lt;/p&gt;</span></span><br><span class="line"><span class="code">&lt;div class=&quot;chakan&quot; style=&quot;text-align: center;&quot;&gt;</span></span><br><span class="line"><span class="code">&lt;a href=&quot;$&#123;POST_URL&#125;&quot; style=&quot;color:#ffffff;text-decoration:none;display:inline-block;min-height:28px;line-height:28px;padding:0 13px;outline:0;background:#ffb7c5;font-size:13px;text-align: center;font-weight:400;border:0;border-radius:999em&quot; target=&quot;_blank&quot;&gt;点击去原文查看&amp;gt;&amp;gt;&lt;/a&gt;</span></span><br><span class="line"><span class="code">&lt;p&gt; &lt;/p&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;div class=&quot;footer-p&quot; style=&quot;text-align: center; margin-top: 3rem; display:block;color:#b3b3b1;text-decoration:none;&quot;&gt;</span></span><br><span class="line"><span class="code">&lt;img src=&quot;https://bu.dusays.com/2024/10/28/671fae824b02f.jpg&quot; style=&quot;width:20rem; margin:0 auto;border-radius: 5px;&quot; /&gt;&amp;nbsp;</span></span><br><span class="line"><span class="code">&lt;hr style=&quot;width:165px;border:0;border-bottom:1px solid #e5e5e5;margin:5px auto;&quot; /&gt;©&amp;nbsp;2023-2025&amp;nbsp;By &lt;a href=&quot;https://blog.elykia.cn/&quot; style=&quot;text-align:center; color: #ffb7c5;text-decoration: none;font-weight: bold&quot; target=&quot;_blank&quot;&gt;Elykia&lt;/a&gt;</span></span><br><span class="line"><span class="code">&lt;p&gt; &lt;/p&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;br /&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;style type=&quot;text/css&quot;&gt;</span></span><br><span class="line"><span class="code">.qmbox ::-webkit-scrollbar &#123; display: none; &#125;</span></span><br><span class="line"><span class="code">&lt;/style&gt;</span></span><br><span class="line"><span class="code">&lt;style id=&quot;cloudAttachStyle&quot; type=&quot;text/css&quot;&gt;</span></span><br><span class="line"><span class="code">.qmbox #divNeteaseBigAttach, .qmbox #divNeteaseBigAttach_bak &#123; display: none; &#125;</span></span><br><span class="line"><span class="code">&lt;/style&gt;</span></span><br><span class="line"><span class="code">&lt;style id=&quot;blockquoteStyle&quot; type=&quot;text/css&quot;&gt;</span></span><br><span class="line"><span class="code">.qmbox blockquote &#123; display: none; &#125;</span></span><br><span class="line"><span class="code">&lt;/style&gt;</span></span><br><span class="line"><span class="code">&lt;style type=&quot;text/css&quot;&gt;</span></span><br><span class="line"><span class="code">.qmbox body &#123; font-size: 14px; font-family: arial, verdana, sans-serif; line-height: 1.666; padding: 0; margin: 0; overflow: auto; white-space: normal; word-wrap: break-word; min-height: 100px; &#125; .qmbox td, .qmbox input, .qmbox button, .qmbox select, .qmbox body &#123; font-family: Helvetica, &#x27;Microsoft Yahei&#x27;, verdana; &#125; .qmbox pre &#123; white-space: pre-wrap; white-space: -moz-pre-wrap; white-space: -pre-wrap; white-space: -o-pre-wrap; word-wrap: break-word; width: 95%; &#125; .qmbox th, .qmbox td &#123; font-family: arial, verdana, sans-serif; line-height: 1.666; &#125; .qmbox img &#123; border: 0; &#125; .qmbox header, .qmbox footer, .qmbox section, .qmbox aside, .qmbox article, .qmbox nav, .qmbox hgroup, .qmbox figure, .qmbox figcaption &#123; display: block; &#125; .qmbox blockquote &#123; margin-right: 0px; &#125;</span></span><br><span class="line"><span class="code">&lt;/style&gt;</span></span><br><span class="line"><span class="code">&lt;style type=&quot;text/css&quot;&gt;</span></span><br><span class="line"><span class="code">@media screen and (max-width: 1100px) &#123;#content p &#123;font-size: 10px;&#125; #content h3 &#123;font-size: 14px;&#125; .footer-p &#123;font-size: 9px;&#125; .dear &#123;font-size: 12px;&#125;&#125;</span></span><br><span class="line"><span class="code">&lt;/style&gt;</span></span><br><span class="line"><span class="code">&lt;style id=&quot;ntes_link_color&quot; type=&quot;text/css&quot;&gt;</span></span><br><span class="line"><span class="code">.qmbox a, .qmbox td a &#123; color: #ff9999; &#125;</span></span><br><span class="line"><span class="code">&lt;/style&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="span-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="code">&lt;div id=&quot;isForwardContent&quot;&gt;</span></span><br><span class="line"><span class="code">&lt;div&gt;</span></span><br><span class="line"><span class="code">&lt;div id=&quot;content&quot;&gt;</span></span><br><span class="line"><span class="code">&lt;div style=&quot;background: white;width: 95%;max-width: 800px;margin: auto auto;         border-radius: 15px;         border: #ff9999 1px solid;         overflow: hidden;         -webkit-box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.12);         box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.18);       &quot;&gt;</span></span><br><span class="line"><span class="code">&lt;header style=&quot;overflow: hidden&quot;&gt;</span></span><br><span class="line"><span class="code">&lt;img src=&quot;https://bu.dusays.com/2024/10/28/671fae826679c.jpg&quot; style=&quot;width: 100%; z-index: 666&quot; /&gt;</span></span><br><span class="line"><span class="code">&lt;/header&gt;</span></span><br><span class="line"><span class="code">&lt;div style=&quot;padding: 5px 20px;background-color: white&quot;&gt;</span></span><br><span class="line"><span class="code">&lt;div class=&quot;dear&quot; style=&quot;  border-radius: 30px;           position: relative;             color: white;             float: left;             z-index: 999;             background: #ffb7c5;             padding: 10px 30px;             margin: -25px auto 0;             box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.3);           &quot;&gt;亲爱的Elykia站长：&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;br /&gt;</span></span><br><span class="line"><span class="code">&lt;center&gt;</span></span><br><span class="line"><span class="code">&lt;h3&gt;来自 &lt;strong&gt;$&#123;NICK&#125;&lt;/strong&gt; 的评论&lt;/h3&gt;</span></span><br><span class="line"><span class="code">&lt;/center&gt;</span></span><br><span class="line"><span class="code">&lt;hr style=&quot;width:200px;border:0;border-bottom:1px solid #e5e5e5;margin:12px auto;&quot; /&gt;</span></span><br><span class="line"><span class="code">&lt;br&gt;</span></span><br><span class="line"><span class="code">&lt;p&gt;</span></span><br><span class="line"><span class="code">您好！妖精爱莉得知 &lt;strong&gt;$&#123;NICK&#125;&lt;/strong&gt; 刚刚在您的网站发表评论：</span></span><br><span class="line"><span class="code">&lt;/p&gt;</span></span><br><span class="line"><span class="code">&lt;div class=&quot;tk-content&quot; style=&quot;border-radius: 8px;border: 1px solid #ddd; padding-bottom: 20px; background-color: #f5f5f5;  margin: 15px 0px;  padding-left: 20px; padding-right: 20px; padding-top: 20px; &quot;&gt;$&#123;COMMENT&#125;&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;p&gt;特地通知您，快去看看吧！&lt;/p&gt;</span></span><br><span class="line"><span class="code">&lt;div class=&quot;chakan&quot; style=&quot;text-align: center;&quot;&gt;</span></span><br><span class="line"><span class="code">&lt;a href=&quot;$&#123;POST_URL&#125;&quot; style=&quot;color:#ffffff;text-decoration:none;display:inline-block;min-height:28px;line-height:28px;padding:0 13px;outline:0;background:#ffb7c5;font-size:13px;text-align: center;font-weight:400;border:0;border-radius:999em&quot; target=&quot;_blank&quot;&gt;点击去原文查看&amp;gt;&amp;gt;&lt;/a&gt;</span></span><br><span class="line"><span class="code">&lt;p&gt; &lt;/p&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;div class=&quot;footer-p&quot; style=&quot;text-align: center; margin-top: 3rem; display:block;color:#b3b3b1;text-decoration:none;&quot;&gt;</span></span><br><span class="line"><span class="code">&lt;img src=&quot;https://bu.dusays.com/2024/10/28/671fae824b02f.jpg&quot; style=&quot;width:20rem; margin:0 auto;border-radius: 5px;&quot; /&gt;</span></span><br><span class="line"><span class="code">&lt;hr style=&quot;width:165px;border:0;border-bottom:1px solid #e5e5e5;margin:5px auto;&quot; /&gt;©&amp;nbsp;2023-2025&amp;nbsp;By &lt;a href=&quot;https://blog.elykia.cn/&quot; style=&quot;text-align:center; color: #ffb7c5;text-decoration: none;font-weight: bold&quot; target=&quot;_blank&quot;&gt;Elykia&lt;/a&gt;</span></span><br><span class="line"><span class="code">&lt;p&gt; &lt;/p&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;br /&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;style type=&quot;text/css&quot;&gt;</span></span><br><span class="line"><span class="code">.qmbox ::-webkit-scrollbar &#123; display: none; &#125;</span></span><br><span class="line"><span class="code">&lt;/style&gt;</span></span><br><span class="line"><span class="code">&lt;style id=&quot;cloudAttachStyle&quot; type=&quot;text/css&quot;&gt;</span></span><br><span class="line"><span class="code">.qmbox #divNeteaseBigAttach, .qmbox #divNeteaseBigAttach_bak &#123; display: none; &#125;</span></span><br><span class="line"><span class="code">&lt;/style&gt;</span></span><br><span class="line"><span class="code">&lt;style id=&quot;blockquoteStyle&quot; type=&quot;text/css&quot;&gt;</span></span><br><span class="line"><span class="code">.qmbox blockquote &#123; display: none; &#125;</span></span><br><span class="line"><span class="code">&lt;/style&gt;</span></span><br><span class="line"><span class="code">&lt;style type=&quot;text/css&quot;&gt;</span></span><br><span class="line"><span class="code">.qmbox body &#123; font-size: 14px; font-family: arial, verdana, sans-serif; line-height: 1.666; padding: 0; margin: 0; overflow: auto; white-space: normal; word-wrap: break-word; min-height: 100px; &#125; .qmbox td, .qmbox input, .qmbox button, .qmbox select, .qmbox body &#123; font-family: Helvetica, &#x27;Microsoft Yahei&#x27;, verdana; &#125; .qmbox pre &#123; white-space: pre-wrap; white-space: -moz-pre-wrap; white-space: -pre-wrap; white-space: -o-pre-wrap; word-wrap: break-word; width: 95%; &#125; .qmbox th, .qmbox td &#123; font-family: arial, verdana, sans-serif; line-height: 1.666; &#125; .qmbox img &#123; border: 0; &#125; .qmbox header, .qmbox footer, .qmbox section, .qmbox aside, .qmbox article, .qmbox nav, .qmbox hgroup, .qmbox figure, .qmbox figcaption &#123; display: block; &#125; .qmbox blockquote &#123; margin-right: 0px; &#125;</span></span><br><span class="line"><span class="code">&lt;/style&gt;</span></span><br><span class="line"><span class="code">&lt;style type=&quot;text/css&quot;&gt;</span></span><br><span class="line"><span class="code">@media screen and (max-width: 1100px) &#123;#content p &#123;font-size: 10px;&#125; #content h3 &#123;font-size: 14px;&#125; .footer-p &#123;font-size: 9px;&#125; .dear &#123;font-size: 12px;&#125;&#125;</span></span><br><span class="line"><span class="code">&lt;/style&gt;</span></span><br><span class="line"><span class="code">&lt;style id=&quot;ntes_link_color&quot; type=&quot;text/css&quot;&gt;</span></span><br><span class="line"><span class="code">.qmbox a, .qmbox td a &#123; color: #ff9999; &#125;</span></span><br><span class="line"><span class="code">&lt;/style&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><p><strong>参考资料</strong>:</p><ol><li><a href="https://www.fomal.cc/posts/d1927166.html#Twikoo%E9%82%AE%E4%BB%B6%E5%9B%9E%E5%A4%8D%E6%A8%A1%E6%9D%BF-%E7%BB%BF%E9%87%8E%E4%BB%99%E8%B8%AA%E6%AC%BE">博客魔改教程总结(五) | Fomalhaut🥝</a></li><li><a href="https://blog.guole.fun/posts/62740/">自定义Twikoo访客通知邮件模板 | Guo Le’s Blog</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Twikoo邮件回复模板-绿野仙踪款&quot;&gt;&lt;a href=&quot;#Twikoo邮件回复模板-绿野仙踪款&quot; class=&quot;headerlink&quot; title=&quot;Twikoo邮件回复模板(绿野仙踪款)&quot;&gt;&lt;/a&gt;Twikoo邮件回复模板(绿野仙踪款)&lt;/h2&gt;&lt;div cl</summary>
      
    
    
    
    <category term="编程开发" scheme="https://blog.elykia.cn/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="hexo" scheme="https://blog.elykia.cn/tags/hexo/"/>
    
    <category term="twikoo" scheme="https://blog.elykia.cn/tags/twikoo/"/>
    
  </entry>
  
  <entry>
    <title>安装兰空图床时出现500服务器错误的解决方案</title>
    <link href="https://blog.elykia.cn/posts/10.html"/>
    <id>https://blog.elykia.cn/posts/10.html</id>
    <published>2024-08-28T15:36:01.000Z</published>
    <updated>2024-11-15T15:56:24.142Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、问题情况"><a href="#一、问题情况" class="headerlink" title="一、问题情况"></a>一、问题情况</h2><p>部署兰空图床时，提示“服务器错误”，错误码500：</p><p><img src="https://bu.dusays.com/2024/08/25/66cab192e5bb4.png" alt="兰空图床500服务器错误" title="兰空图床500服务器错误"></p><p><strong>问题原因</strong></p><p>我的部署环境为PHP8.3，官方建议的是8.1，版本不对有些代码不兼容</p><h2 id="二、解决方案"><a href="#二、解决方案" class="headerlink" title="二、解决方案"></a>二、解决方案</h2><h3 id="2-1-修改代码兼容"><a href="#2-1-修改代码兼容" class="headerlink" title="2.1 修改代码兼容"></a>2.1 修改代码兼容</h3><p>修改<code>vendor/nesbot/carbon/src/Carbon/Traits/Creator.php</code>的第928行，将</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private static function setLastErrors(array $lastErrors)</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private static function setLastErrors($lastErrors)</span><br></pre></td></tr></table></figure><p><strong>参考资料</strong>:</p><ol><li><a href="https://stackoverflow.com/questions/74749564/laravel-carbon-carbonsetlasterrors">Laravel Carbon\Carbon::setLastErrors()</a></li><li><a href="https://www.nginxisok.com/blog/lsky-500-internal-error.html">安装兰空图床时出现500服务器错误的解决</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、问题情况&quot;&gt;&lt;a href=&quot;#一、问题情况&quot; class=&quot;headerlink&quot; title=&quot;一、问题情况&quot;&gt;&lt;/a&gt;一、问题情况&lt;/h2&gt;&lt;p&gt;部署兰空图床时，提示“服务器错误”，错误码500：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bu.</summary>
      
    
    
    
    <category term="编程开发" scheme="https://blog.elykia.cn/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="图床" scheme="https://blog.elykia.cn/tags/%E5%9B%BE%E5%BA%8A/"/>
    
    <category term="报错" scheme="https://blog.elykia.cn/tags/%E6%8A%A5%E9%94%99/"/>
    
    <category term="问题" scheme="https://blog.elykia.cn/tags/%E9%97%AE%E9%A2%98/"/>
    
    <category term="lsky" scheme="https://blog.elykia.cn/tags/lsky/"/>
    
  </entry>
  
  <entry>
    <title>解决Twikoo评论区在页面刷新时消失问题</title>
    <link href="https://blog.elykia.cn/posts/9.html"/>
    <id>https://blog.elykia.cn/posts/9.html</id>
    <published>2024-08-26T10:34:59.000Z</published>
    <updated>2024-11-15T15:49:56.558Z</updated>
    
    <content type="html"><![CDATA[<p>当浏览器开启缓存的时候，第一次打开页面可以正常显示twikoo，但F5刷新就直接消失，需要从别的页面跳过来才能显示</p><h3 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h3><p>js顺序的问题，twikoo要放在chunk之前加载</p><p><img src="https://bu.dusays.com/2024/08/25/66caebcebee52.png"></p><p><img src="https://bu.dusays.com/2024/08/25/66caebf6d99ca.png"></p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>和 js 的加载顺序有关，和缓存无关，Cache-Control 不能解决根本问题，建议调整 js 的加载顺序，确保“声明”在“调用”之前执行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 声明 --&gt;</span><br><span class="line">&lt;div id=&quot;tcomment&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.staticfile.org/twikoo/1.6.39/twikoo.all.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;!-- 调用 --&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">twikoo.init(&#123; ... &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="其它方式解决"><a href="#其它方式解决" class="headerlink" title="其它方式解决"></a>其它方式解决</h3><p>声明必须在调用之前，之所以缓存之后没有出现问题，是因为<code>&lt;script defer ...&gt;</code>无法保证js的执行先后顺序，被缓存的twikoo js文件恰巧先于网站js执行了，造成了“缓存以后就正常了”的现象。</p><p>我用了其它方式解决<br>关于 CDN 镜像</p><p>我开始出问题是用的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.staticfile.org/twikoo/1.6.39/twikoo.all.min.js</span><br></pre></td></tr></table></figure><p>原因也出在Cache-Control: max-age&#x3D;2</p><p>切换到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.bootcdn.net/ajax/libs/twikoo/1.6.39/twikoo.all.min.js</span><br></pre></td></tr></table></figure><p> Cache-Control: max-age&#x3D;31536000<br>就完全正常了 之前是两秒过期 现在缓存时间长了到没问题了</p><h3 id="建议："><a href="#建议：" class="headerlink" title="建议："></a>建议：</h3><p>目前国内有很多 NPM 和 CDNJS 的 CDN，可以支持相关包文件的高速引用，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BootCDN: www.bootcdn.cn</span><br><span class="line">七牛云: www.staticfile.org</span><br><span class="line">360: cdn.baomitu.com</span><br><span class="line">字节跳动: cdn.bytedance.com</span><br></pre></td></tr></table></figure><p>但现在 BootCDN 经常出现问题，七牛已经被放弃支持，字节跳动更新不及时，距离上次更新已经两年有余，只剩 360 可以勉强一用，但是存在节点调度不准的问题，比如福建移动经常被分配到国外节点，北京联通却被分配到广州电信，这是极不好的，而且也不完美支持 url 格式和 dnssec、ipv6、unpkg 等功能。所以推荐以下国内高速镜像站点供饮用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Zstatic：s4.zstatic.net</span><br><span class="line">南科大：mirrors.sustech.edu.cn/cdnjs</span><br></pre></td></tr></table></figure><p>其中 Zstatic 用到了镜像回源，也就是说只要访问一次，文件就会被存储到国内的服务器上，再也不用担心缓存过期了，所以建议优先用这个。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://s4.zstatic.net/ajax/libs/twikoo/1.6.39/twikoo.all.min.js</span><br></pre></td></tr></table></figure><p><strong>参考资料</strong>:</p><ol><li><a href="https://github.com/twikoojs/twikoo/issues/642">Issue #642 · twikoojs&#x2F;twikoo (github.com)</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;当浏览器开启缓存的时候，第一次打开页面可以正常显示twikoo，但F5刷新就直接消失，需要从别的页面跳过来才能显示&lt;/p&gt;
&lt;h3 id=&quot;问题原因&quot;&gt;&lt;a href=&quot;#问题原因&quot; class=&quot;headerlink&quot; title=&quot;问题原因&quot;&gt;&lt;/a&gt;问题原因&lt;/h3&gt;</summary>
      
    
    
    
    <category term="编程开发" scheme="https://blog.elykia.cn/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="优化" scheme="https://blog.elykia.cn/tags/%E4%BC%98%E5%8C%96/"/>
    
    <category term="报错" scheme="https://blog.elykia.cn/tags/%E6%8A%A5%E9%94%99/"/>
    
    <category term="问题" scheme="https://blog.elykia.cn/tags/%E9%97%AE%E9%A2%98/"/>
    
    <category term="Hexo" scheme="https://blog.elykia.cn/tags/Hexo/"/>
    
    <category term="twikoo" scheme="https://blog.elykia.cn/tags/twikoo/"/>
    
  </entry>
  
  <entry>
    <title>Vercount：不蒜子的完美替代方案</title>
    <link href="https://blog.elykia.cn/posts/8.html"/>
    <id>https://blog.elykia.cn/posts/8.html</id>
    <published>2024-08-25T08:43:33.000Z</published>
    <updated>2024-11-17T07:27:41.295Z</updated>
    
    <content type="html"><![CDATA[<p><strong>不蒜子</strong>作为一个网站计数器工具，因其简单易用而受到广泛欢迎。然而，随着时间的推移，不蒜子的网站访问速度变慢，频繁出现502错误，且由于作者已停止维护，逐渐变得不再适应现代网页统计的需求。针对这些问题，<strong>Vercount</strong>成为了一个完美的替代方案。</p><h3 id="什么是-Vercount？"><a href="#什么是-Vercount？" class="headerlink" title="什么是 Vercount？"></a>什么是 Vercount？</h3><p>Vercount 是一个基于 NextJS 和 Redis 的网站计数器，具有以下特点：</p><ul><li><strong>响应速度快</strong>：服务器响应时间在 10ms 以内。</li><li><strong>优化中国访问</strong>：可以选择使用中国加速版本，或通过 Vercel 的全球 CDN 提供 99.99% 的可用性。</li><li><strong>准确统计</strong>：采用 POST 请求进行统计，避免了不蒜子旧有的 Referrer 方法，确保在移动端、Firefox、Safari 等浏览器上的统计准确性。</li><li><strong>安全性增强</strong>：使用 JSON 回调，替代不蒜子的 JSONP 回调方法，有效防止 CSRF 攻击。</li><li><strong>自动数据同步</strong>：Vercount 会自动同步不蒜子 (site_pv, site_uv, page_pv) 的所有数据，初次使用时无需手动操作。</li><li><strong>无缝切换</strong>：完全兼容不蒜子的 span 标签，可以无缝替换。</li><li><strong>高可靠性</strong>：使用 Serverless Redis 作为数据存储，结合 Vercel Serverless Functions，保证数据不会丢失，服务可用性高达 99.99%。</li></ul><h3 id="为什么选择-Vercount？"><a href="#为什么选择-Vercount？" class="headerlink" title="为什么选择 Vercount？"></a>为什么选择 Vercount？</h3><p>虽然不蒜子在网站统计中曾经表现出色，但其速度慢、统计方法过时、容易受到安全攻击等缺点越来越明显。相比之下，Vercount 提供了更快、更稳定和更安全的解决方案。你只需简单地替换现有的不蒜子 script 标签，Vercount 就会自动同步并保持与不蒜子数据的一致性。</p><h3 id="项目官网"><a href="#项目官网" class="headerlink" title="项目官网"></a>项目官网</h3><p>更多信息和使用方法，请访问 <a href="https://vercount.one/">Vercount 官网</a>。</p><h3 id="如何从不蒜子切换到-Vercount"><a href="#如何从不蒜子切换到-Vercount" class="headerlink" title="如何从不蒜子切换到 Vercount"></a>如何从不蒜子切换到 Vercount</h3><p>切换过程非常简单：只需将不蒜子的 script 标签替换为 Vercount 的标签，其他配置保持不变。数据会在首次访问时自动从不蒜子同步，Vercount 还会自动保持数据同步（当然前提是，不蒜子服务没有中断）。</p><p>安知鱼主题：option引用以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(中国访问优化)</span><br><span class="line">busuanzi: https://cn.vercount.one/js?i=</span><br><span class="line">(海外访问优化)</span><br><span class="line">busuanzi: https://events.vercount.one/js?i=</span><br></pre></td></tr></table></figure><p>如果你正在寻找一个更现代、更高效的访客统计工具，并希望减少维护工作，Vercount 是一个理想的选择。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;不蒜子&lt;/strong&gt;作为一个网站计数器工具，因其简单易用而受到广泛欢迎。然而，随着时间的推移，不蒜子的网站访问速度变慢，频繁出现502错误，且由于作者已停止维护，逐渐变得不再适应现代网页统计的需求。针对这些问题，&lt;strong&gt;Vercount&lt;/str</summary>
      
    
    
    
    <category term="编程开发" scheme="https://blog.elykia.cn/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="优化" scheme="https://blog.elykia.cn/tags/%E4%BC%98%E5%8C%96/"/>
    
    <category term="Hexo" scheme="https://blog.elykia.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>LskyPro图床 强行支持多吉云</title>
    <link href="https://blog.elykia.cn/posts/7.html"/>
    <id>https://blog.elykia.cn/posts/7.html</id>
    <published>2024-08-12T13:21:04.000Z</published>
    <updated>2024-11-15T15:50:55.166Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>接入其他存储的方案太过昂贵，多吉云就成了咱这普通人的最优选。</p><p>很可惜的是多吉云没有被任何一家图床程序接入，于是自己动手接入成了最后的选择。</p><h2 id="离谱的多吉云"><a href="#离谱的多吉云" class="headerlink" title="离谱的多吉云"></a>离谱的多吉云</h2><p>多吉云使用的是腾讯的COS作为底层然后又做了个API接口获取密钥</p><p>用多吉云的密钥访问自己的API接口来获取可以访问的密钥</p><p>而且密钥是三段式（<code>accessKeyId</code>&#x2F;<code>secretAccessKey</code>&#x2F;<code>sessionToken</code>）临时密钥</p><p>真TM日狗</p><p><img src="https://bu.dusays.com/2024/11/15/67375786485f1.png" alt="多吉云"></p><h2 id="兼容多吉云"><a href="#兼容多吉云" class="headerlink" title="兼容多吉云"></a>兼容多吉云</h2><p>曲线救国方案临时版，并不是最优解</p><p>本来打算直接新增存储策略的，但是改半天都用不了，还给干500错误了</p><p>编辑文件 <code>App/Enums/Strategy/S3Option.php</code> 添加上 <code>session_Token</code> 转换 <code>sessionToken</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">php</span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Enums\Strategy;</span><br><span class="line"></span><br><span class="line">final class S3Option</span><br><span class="line">&#123;</span><br><span class="line">    /** @var string 访问url */</span><br><span class="line">    const Url = &#x27;url&#x27;;</span><br><span class="line"></span><br><span class="line">    /** @var string AccessKeyId */</span><br><span class="line">    const AccessKeyId = &#x27;access_key_id&#x27;;</span><br><span class="line"></span><br><span class="line">    /** @var string SecretAccessKey */</span><br><span class="line">    const SecretAccessKey = &#x27;secret_access_key&#x27;;</span><br><span class="line">    </span><br><span class="line">    /** @var string sessionToken */</span><br><span class="line">    const sessionToken = &#x27;session_Token&#x27;;</span><br><span class="line"></span><br><span class="line">    /** @var string Endpoint */</span><br><span class="line">    const Endpoint = &#x27;endpoint&#x27;;</span><br><span class="line"></span><br><span class="line">    /** @var string 区域 */</span><br><span class="line">    const Region = &#x27;region&#x27;;</span><br><span class="line"></span><br><span class="line">    /** @var string Bucket */</span><br><span class="line">    const Bucket = &#x27;bucket&#x27;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编辑文件 <code>app/Services/ImageService.php</code> 给AwsS3添加上 <code>sessionToken</code> 的获取 <code>&#39;token&#39; =&gt; $configs-&gt;get(S3Option::sessionToken)</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">php</span><br><span class="line">StrategyKey::S3 =&gt; new AwsS3V3Adapter(</span><br><span class="line">            client: new S3Client([</span><br><span class="line">                &#x27;credentials&#x27; =&gt; [</span><br><span class="line">                    &#x27;key&#x27;    =&gt; $configs-&gt;get(S3Option::AccessKeyId),</span><br><span class="line">                    &#x27;secret&#x27; =&gt; $configs-&gt;get(S3Option::SecretAccessKey),</span><br><span class="line">                    &#x27;token&#x27; =&gt; $configs-&gt;get(S3Option::sessionToken)</span><br><span class="line">                ],</span><br><span class="line">                &#x27;endpoint&#x27; =&gt; $configs-&gt;get(S3Option::Endpoint),</span><br><span class="line">                &#x27;region&#x27; =&gt; $configs-&gt;get(S3Option::Region),</span><br><span class="line">                &#x27;version&#x27; =&gt; &#x27;2006-03-01&#x27;,</span><br><span class="line">            ]),</span><br><span class="line">            bucket: $configs-&gt;get(S3Option::Bucket),</span><br></pre></td></tr></table></figure><p>新增一个php文件，命名随意，随便扔个地方调用一下，文件调用就可以获取把密钥传到数据库里了<br>因为是密钥有两小时可用时间，最好还是定时访问更新，直接调用也是可以的，不过要搞清楚优先级<br>每天的调用量是80000 次 &#x2F; 天，想必用上多吉的都是穷逼一个，这个调用足够了</p><p>可以直接调用文件或者在开个网站内网hosts定时访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">php</span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">// 曲线救国方案</span><br><span class="line">// 多吉云的存储API为永久密钥，但是这是用来获取AWS S3临时密钥的</span><br><span class="line">// 临时密钥有三个 accessKey，secretKey，sessionToken</span><br><span class="line">// header(&#x27;content-type:application/json&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function dogecloud_api($apiPath, $data = array(), $jsonMode = false) &#123;</span><br><span class="line">    // 这里替换为你的多吉云API的永久 AccessKey 和 SecretKey，可在用户中心 - 密钥管理中查看</span><br><span class="line">    $accessKey = &quot;XXXXXXXXXX&quot;;</span><br><span class="line">    $secretKey = &quot;XXXXXXXXXXXXX&quot;;</span><br><span class="line"></span><br><span class="line">    $body = $jsonMode ? json_encode($data) : http_build_query($data);</span><br><span class="line">    $signStr = $apiPath . &quot;\n&quot; . $body;</span><br><span class="line">    $sign = hash_hmac(&#x27;sha1&#x27;, $signStr, $secretKey);</span><br><span class="line">    $Authorization = &quot;TOKEN &quot; . $accessKey . &quot;:&quot; . $sign;</span><br><span class="line"></span><br><span class="line">    $ch = curl_init();</span><br><span class="line">    curl_setopt($ch, CURLOPT_URL, &quot;https://api.dogecloud.com&quot; . $apiPath);</span><br><span class="line">    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);</span><br><span class="line">    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);</span><br><span class="line">    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 1); // 如果是本地调试，或者根本不在乎中间人攻击，可以把这里的 1 和 2 修改为 0，就可以避免报错</span><br><span class="line">    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2); // 建议实际使用环境下 cURL 还是配置好本地证书</span><br><span class="line">    if(isset($data) &amp;&amp; $data)&#123;</span><br><span class="line">        curl_setopt($ch, CURLOPT_POST, true);</span><br><span class="line">        curl_setopt($ch, CURLOPT_POSTFIELDS, $body);</span><br><span class="line">        curl_setopt($ch, CURLOPT_HTTPHEADER, array(</span><br><span class="line">            &#x27;Content-Type: &#x27; . ($jsonMode ? &#x27;application/json&#x27; : &#x27;application/x-www-form-urlencoded&#x27;),</span><br><span class="line">            &#x27;Authorization: &#x27; . $Authorization</span><br><span class="line">        ));</span><br><span class="line">    &#125;</span><br><span class="line">    $ret = curl_exec($ch);</span><br><span class="line">    curl_close($ch);</span><br><span class="line">    return json_decode($ret, true);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$api = dogecloud_api(&#x27;/auth/tmp_token.json&#x27;, array(</span><br><span class="line">    &quot;channel&quot; =&gt; &quot;OSS_FULL&quot;,</span><br><span class="line">    &quot;scopes&quot; =&gt; array(&quot;*&quot;)</span><br><span class="line">), true);</span><br><span class="line">// 临时密钥，两小时内有效,定时访问就行，随便怎么放</span><br><span class="line">// 绑定Lsky的数据库</span><br><span class="line">$servername = &quot;XXXXXXX&quot;; //数据库主机名</span><br><span class="line">$dbname = &quot;XXXXXX&quot;; //使用的数据库</span><br><span class="line">$username = &quot;XXXXX&quot;; //数据库连接用户名</span><br><span class="line">$password = &quot;XXXXX&quot;;//对应的密码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 重构json表</span><br><span class="line">$DogeAPI = [</span><br><span class="line">    &#x27;url&#x27;  =&gt;   &#x27;XXXXX&#x27;, //云存储的访问域名,举例https://miraipip.2w2.top</span><br><span class="line">    &#x27;bucket&#x27;    =&gt; &#x27;XXXXX&#x27;, //调用时所需的 s3Bucket 参数。</span><br><span class="line">    &#x27;region&#x27; =&gt; &#x27;automatic&#x27;, //自动选区</span><br><span class="line">    &#x27;queries&#x27; =&gt; &#x27;&#x27;,</span><br><span class="line">    &#x27;endpoint&#x27; =&gt; &#x27;XXXXXXXXXXXXX&#x27;,  //调用所需的 s3Endpoint 参数。如 https://cos.ap-guangzhou.myqcloud.com/</span><br><span class="line">    &#x27;access_key_id&#x27; =&gt; $api[&#x27;data&#x27;][&#x27;Credentials&#x27;][&#x27;accessKeyId&#x27;],</span><br><span class="line">    &#x27;secret_access_key&#x27; =&gt; $api[&#x27;data&#x27;][&#x27;Credentials&#x27;][&#x27;secretAccessKey&#x27;],</span><br><span class="line">    &#x27;session_Token&#x27;  =&gt; $api[&#x27;data&#x27;][&#x27;Credentials&#x27;][&#x27;sessionToken&#x27;],</span><br><span class="line">    ];</span><br><span class="line">$ApiData = json_encode($DogeAPI);</span><br><span class="line">$ApiData = addslashes($ApiData);</span><br><span class="line">// 你要是想看看原内容就把下面去了</span><br><span class="line">// echo json_encode($api);</span><br><span class="line"></span><br><span class="line">// 入库</span><br><span class="line">try &#123;</span><br><span class="line">    $conn = new PDO(&quot;mysql:host=$servername;dbname=$dbname&quot;, $username, $password);</span><br><span class="line">    // 设置 PDO 错误模式，用于抛出异常</span><br><span class="line">    $conn-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);</span><br><span class="line">    // 下面是查询ID 100 的存储策略信息</span><br><span class="line">    // 可以吧查询阉了保留更新</span><br><span class="line">    $sql = &quot;SELECT * FROM `strategies` WHERE `id` = 100 &quot;;</span><br><span class="line">    // 更新strategies表ID为 100 的 configs 值</span><br><span class="line">    // 每创建一个存储策略的ID都是不一样的，你只需要找到用于多吉云AWS S3策略的ID就行了</span><br><span class="line">    $sql = &quot;UPDATE `strategies` SET `configs` = &#x27;$ApiData&#x27; WHERE `strategies`.`id` = 100&quot;;</span><br><span class="line">    // 使用 exec() ，没有结果返回 </span><br><span class="line">    $conn-&gt;exec($sql);</span><br><span class="line">&#125;</span><br><span class="line">catch(PDOException $e)</span><br><span class="line">&#123;</span><br><span class="line">    echo $sql . &quot;&lt;br&gt;&quot; . $e-&gt;getMessage();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$conn = null;</span><br><span class="line"></span><br><span class="line">        // $DogeAPI = $api[&#x27;data&#x27;][&#x27;Credentials&#x27;];</span><br><span class="line">        // 写入文件</span><br><span class="line">        // echo json_encode($DogeAPI);</span><br><span class="line">        // $json_string = json_encode($DogeAPI);// 过滤</span><br><span class="line">        // file_put_contents(&#x27;user.json&#x27;, $json_string);</span><br><span class="line">        // $DogeCloudAPI = file_get_contents(&#x27;user.json&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>以上就是全部了！</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>没钱才是根本原因！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;接入其他存储的方案太过昂贵，多吉云就成了咱这普通人的最优选。&lt;/p&gt;
&lt;p&gt;很可惜的是多吉云没有被任何一家图床程序接入，于是自己动手接入成了</summary>
      
    
    
    
    <category term="软件破解" scheme="https://blog.elykia.cn/categories/%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3/"/>
    
    
    <category term="图床" scheme="https://blog.elykia.cn/tags/%E5%9B%BE%E5%BA%8A/"/>
    
    <category term="多吉云" scheme="https://blog.elykia.cn/tags/%E5%A4%9A%E5%90%89%E4%BA%91/"/>
    
    <category term="lsky" scheme="https://blog.elykia.cn/tags/lsky/"/>
    
  </entry>
  
  <entry>
    <title>Hexo部署到阿里云</title>
    <link href="https://blog.elykia.cn/posts/6.html"/>
    <id>https://blog.elykia.cn/posts/6.html</id>
    <published>2024-05-27T09:41:10.000Z</published>
    <updated>2024-11-15T13:37:17.323Z</updated>
    
    <content type="html"><![CDATA[<h3 id="部署环境与准备"><a href="#部署环境与准备" class="headerlink" title="部署环境与准备"></a>部署环境与准备</h3><p>1.环境</p><p>本地 Windows11 操作系统</p><p>阿里云 Debian12 服务器</p><p>1panel Linux服务器运维管理面板</p><p>2.准备 </p><p>Hexo 本地博客</p><p>MobaXterm 连接服务器</p><h3 id="云服务器配置-Git"><a href="#云服务器配置-Git" class="headerlink" title="云服务器配置 Git"></a>云服务器配置 Git</h3><p>1.查看 git 的版本 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git version </span><br></pre></td></tr></table></figure><p>2 创建 git 用户并且修改权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">adduser elykia</span><br><span class="line">passwd elykia</span><br><span class="line">chmod 740 /etc/sudoers </span><br><span class="line">vim /etc/sudoers root</span><br><span class="line">在这里加入：</span><br><span class="line">root    ALL=(ALL)       ALL</span><br><span class="line">elykia     ALL=(ALL)       ALL</span><br><span class="line">:wq!   #退出</span><br></pre></td></tr></table></figure><p>3.本地 windows10 使用 Gitbash 创建密钥（若有可以省去）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>4.将本地创建 id_rsa.pub 中文件复制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">su elykia</span><br><span class="line">mkdir ~/.ssh</span><br><span class="line">vim ~/.ssh/authorized_keys</span><br><span class="line">cat ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>13.本地测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -v elykia@47.238.174.200</span><br></pre></td></tr></table></figure><p>出现 Welcome to Alibaba Cloud Elastic Compute Service !则代表部署成功</p><h3 id="云服务器网站配置"><a href="#云服务器网站配置" class="headerlink" title="云服务器网站配置"></a>云服务器网站配置</h3><p>1.创建网站目录并且设置权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line">mkdir /opt/1panel/apps/openresty/openresty/www/sites/blog/index</span><br><span class="line">chown elykia:elykia -R /opt/1panel/apps/openresty/openresty/www/sites/blog/index</span><br></pre></td></tr></table></figure><p>5.建立 git 仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line">cd /opt/1panel/apps/openresty/openresty/www/sites/blog/index</span><br><span class="line">git init --bare blog.git</span><br><span class="line">chown elykia:elykia -R blog.git</span><br></pre></td></tr></table></figure><p>6.同步网站根目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim blog.git/hooks/post-receive</span><br><span class="line"></span><br><span class="line">#添加以下内容</span><br><span class="line">#!/bin/sh</span><br><span class="line">git --work-tree=/opt/1panel/apps/openresty/openresty/www/sites/blog/index --git-dir=/opt/1panel/apps/openresty/openresty/www/sites/blog/index/blog.git checkout -f</span><br></pre></td></tr></table></figure><p>7.修改权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /opt/1panel/apps/openresty/openresty/www/sites/blog/index/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>8.在 windows10 本地 hexo 目录修改_config.yml 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: elykia@127.0.0.1:/opt/1panel/apps/openresty/openresty/www/sites/blog/index/blog.git #用户名@服务器Ip:git仓库位置</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>9.在本机 gitbash 部署</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><h3 id="常见报错"><a href="#常见报错" class="headerlink" title="常见报错"></a>常见报错</h3><ol><li>git-upload-pack: 未找到命令</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash: git-upload-pack: command not found</span><br><span class="line">fatal: Could not read from remote repository.</span><br></pre></td></tr></table></figure><p><code>解决方法</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s  /usr/local/git/bin/git-upload-pack  /usr/bin/git-upload-pack</span><br></pre></td></tr></table></figure><p>2.git-receive-pack: 未找到命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash: git-receive-pack: command not found</span><br><span class="line">fatal: Could not read from remote repository.</span><br></pre></td></tr></table></figure><p><code>解决方法</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /usr/local/git/bin/git-receive-pack  /usr/bin/git-receive-pack</span><br></pre></td></tr></table></figure><p>3.无法远程连接获取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fatal: Could not read from remote repository.</span><br></pre></td></tr></table></figure><p><code>解决方法</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">重试或者 删掉本地ssh公钥重新上传至服务器</span><br></pre></td></tr></table></figure><p>4.key 出错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Host key verification failed.</span><br></pre></td></tr></table></figure><p><code>解决方法</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -R 你要访问的IP地址</span><br></pre></td></tr></table></figure><p><strong>参考资料</strong>:</p><ol><li><a href="https://blog.anheyu.com/posts/ce6a.html">Hexo部署到腾讯云或阿里云</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;部署环境与准备&quot;&gt;&lt;a href=&quot;#部署环境与准备&quot; class=&quot;headerlink&quot; title=&quot;部署环境与准备&quot;&gt;&lt;/a&gt;部署环境与准备&lt;/h3&gt;&lt;p&gt;1.环境&lt;/p&gt;
&lt;p&gt;本地 Windows11 操作系统&lt;/p&gt;
&lt;p&gt;阿里云 Debian12 </summary>
      
    
    
    
    <category term="服务器运维" scheme="https://blog.elykia.cn/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="服务器" scheme="https://blog.elykia.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="Hexo" scheme="https://blog.elykia.cn/tags/Hexo/"/>
    
    <category term="1panel" scheme="https://blog.elykia.cn/tags/1panel/"/>
    
    <category term="Debian" scheme="https://blog.elykia.cn/tags/Debian/"/>
    
  </entry>
  
  <entry>
    <title>[Linux/Windows] Typora理论兼容破解方案</title>
    <link href="https://blog.elykia.cn/posts/5.html"/>
    <id>https://blog.elykia.cn/posts/5.html</id>
    <published>2024-05-06T17:08:52.000Z</published>
    <updated>2024-09-03T07:45:29.109Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Typora-破解思路"><a href="#Typora-破解思路" class="headerlink" title="Typora 破解思路"></a>Typora 破解思路</h3><p>互联网上公开的破解手段中，大多数都是采用对 Typora 加密的核心JS进行修改或Patch二进制实现绕过授权的，但这无疑会出现以下几种问题</p><ul><li>针对单个版本，无法做到通用补丁</li><li>由于AES代码在 <code>main.node</code> 中，无法通用的hook密匙，需要手动获取AES密匙解密文件</li><li>侵入性大，由于核心js长度硬编码在<code>main.node</code>中，调试与修改需要操作二进制程序</li></ul><p>针对以上几个痛点整理出以下几个需求</p><ul><li>尽量实现全版本兼容，且无需修改二进制程序以保证多平台可用</li><li>能够优雅的处理激活过程，最好像正版一样使用</li><li>无需修改入口及使用补丁，保证更新版本只需要 one click 激活</li></ul><p>俗话说，打蛇打七寸，去跟作者防护的JS做对抗如同撞豆腐也要找块冻豆腐，如何能四两拨千斤的点破罩门呢？</p><p>针对传统软件的破解，我们常采用抓包&#x2F;山寨服务器的方式修改验证包实现，但在逆向过程中发现Typora使用了非对称算法解密数据，导致不修改核心js就无法做到山寨数据，那么这条路就行不通了。</p><p>真的行不通吗?</p><p>在分析的过程中注意到Typora使用nodejs自带的<code>crypto.publicDecrypt()</code></p><p>是否可以hook nodejs 相关实现来修改数据呢？</p><p>当然是可以的，Nodejs 本身是开源的，查看源码了解到算法最终实现是C++语言，分析二进制程序就能找到对应的实现位置进行hook，但这明显的违背了我们的“二进制无关”需求</p><p>有没有什么其他办法对该函数进行hook呢</p><p>进一步的来说，Nodejs 运行的 ECMAScript 本身就存在 hook 能力，若使用js对<strong>typora</strong>使用的<code>API</code>进行hook便可以满足二进制无关的需求，以此来以点破面。</p><p>那么如何使用JS进行hook呢？首先需要一个能够让我们注入JS的方式，大有如下两种思路</p><ul><li>针对Nodejs的运行环境，注入并调用Node执行JS的函数插入我们的JS</li><li>针对未加密的<code>node_modules</code>，将代码插入库的明文代码中</li></ul><p>显然就目前来讲第二种方式是比较省心的，但向node_modules的库中插入hook代码需要考虑几个问题</p><ul><li>被插入库的加载时机，加载晚于核心JS无法hook</li><li>HOOK方式</li></ul><p>经过对核心JS的分析，发现<code>raven</code>这个库会在较早的时机被加载，所以可以将代码插入到该库的<code>index.js</code></p><p>而HOOK方式经过尝试采用了对Modules原型重写，拦截require的方式HOOK Typora使用的库对象并进行修改</p><p>明确以上两点后编写hook代码即可完成破解工作。</p><p><img src="https://bu.dusays.com/2024/08/25/66caede9217a5.png"></p><p>在<code>Typora</code> require <code>Crypto</code>及<code>electron-fetch</code> 库的时候返回经过修改的对象</p><p>修改后的<code>electron-fetch</code>对象根据请求链接返回mock的有效License结果</p><p><img src="https://bu.dusays.com/2024/08/25/66caedf23a229.png"></p><p>修改后的<code>crypto</code>对象判断解密内容是否为mock内容来返回mock的解密license数据</p><p><img src="https://bu.dusays.com/2024/08/25/66caedf97865c.png"></p><p>至此通过JS hook的方式实现了对验证流程的劫持，只要在输入激活码的地方输入能够满足typora本地判断的激活码即可进入网络验证流程并被hook代码返回正确的验证数据。</p><p>插入hook js后重打包asar即可完成破解，使用代码生成的激活码进行激活。</p><p>该方式只要验证逻辑不修改并存在注入点便持续可用，理论多版本兼容。</p><p>自动注入工具代码地址：<a href="https://github.com/DiamondHunters/NodeInject">https://github.com/DiamondHunters/NodeInject</a></p><p>破解验证脚本地址：<a href="https://github.com/DiamondHunters/NodeInject_Hook_example">https://github.com/DiamondHunters/NodeInject_Hook_example</a></p><p>使用方式：</p><ol><li>下载自动注入工具，用破解脚本替换注入工具中的hooklog.log</li><li>构建自动注入工具，放在typora下运行</li><li>构建并运行破解验证脚本下的license_gen程序获得激活码</li><li>打开Typora，设置使用国内服务器（网络问题，非必须，不开启可能第一次激活失败后会弹出询问是否开启）后填写邮箱（任意）与生成的激活码</li><li>激活成功（windows&#x2F;ubuntu最新版本测试成功）</li></ol><p>如果在构建中遇到困难可以在验证脚本的Action中找到预先构建版本</p><p>在这个项目库：<br><a href="https://github.com/DiamondHunters/NodeInject_Hook_example">https://github.com/DiamondHunters/NodeInject_Hook_example</a></p><ol><li>要登录 GitHub（科学上网）</li><li>在 Actions -&gt; build（有多个，优先选最上面的）点进去</li><li>滑到最下面，有一个 NodeInject-windows 的压缩包，下载，里面就有 exe</li><li>把 NodeInject-windows 压缩包中的两个 exe 解压到 typora 的安装目录，比如 D:\Program Files\Typora</li><li>运行 cmd 跳转到安装目录，输入 node_inject.exe 回车即可自动破解，然后输入 license-gen.exe 回车可得到激活码</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://elykia.lanzn.com/b00rn0ywqj</span><br><span class="line">密码:Elykia</span><br></pre></td></tr></table></figure><ul><li>更新时，把目录下的node 删除 重新运行注册机生成激活码</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Typora-破解思路&quot;&gt;&lt;a href=&quot;#Typora-破解思路&quot; class=&quot;headerlink&quot; title=&quot;Typora 破解思路&quot;&gt;&lt;/a&gt;Typora 破解思路&lt;/h3&gt;&lt;p&gt;互联网上公开的破解手段中，大多数都是采用对 Typora 加密的核心</summary>
      
    
    
    
    <category term="软件破解" scheme="https://blog.elykia.cn/categories/%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3/"/>
    
    
    <category term="破解" scheme="https://blog.elykia.cn/tags/%E7%A0%B4%E8%A7%A3/"/>
    
    <category term="Typora" scheme="https://blog.elykia.cn/tags/Typora/"/>
    
    <category term="Markdown" scheme="https://blog.elykia.cn/tags/Markdown/"/>
    
  </entry>
  
</feed>
